// Code generated by protoc-gen-go. DO NOT EDIT.
// source: baccarat.proto

package command

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ChipInRes_ChipRes int32

const (
	ChipInRes_CHIP_OK  ChipInRes_ChipRes = 0
	ChipInRes_NO_MONEY ChipInRes_ChipRes = 1
)

var ChipInRes_ChipRes_name = map[int32]string{
	0: "CHIP_OK",
	1: "NO_MONEY",
}

var ChipInRes_ChipRes_value = map[string]int32{
	"CHIP_OK":  0,
	"NO_MONEY": 1,
}

func (x ChipInRes_ChipRes) String() string {
	return proto.EnumName(ChipInRes_ChipRes_name, int32(x))
}

func (ChipInRes_ChipRes) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_4bef2faf2a7bc098, []int{4, 0}
}

type BcrtRet struct {
	DealerCards          []int32  `protobuf:"varint,1,rep,packed,name=dealerCards,proto3" json:"dealerCards,omitempty"`
	PlayerCards          []int32  `protobuf:"varint,2,rep,packed,name=playerCards,proto3" json:"playerCards,omitempty"`
	DealerPoints         int32    `protobuf:"varint,4,opt,name=dealerPoints,proto3" json:"dealerPoints,omitempty"`
	PlayerPoints         int32    `protobuf:"varint,5,opt,name=playerPoints,proto3" json:"playerPoints,omitempty"`
	WinType              int32    `protobuf:"varint,6,opt,name=winType,proto3" json:"winType,omitempty"`
	PairType             int32    `protobuf:"varint,7,opt,name=pairType,proto3" json:"pairType,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BcrtRet) Reset()         { *m = BcrtRet{} }
func (m *BcrtRet) String() string { return proto.CompactTextString(m) }
func (*BcrtRet) ProtoMessage()    {}
func (*BcrtRet) Descriptor() ([]byte, []int) {
	return fileDescriptor_4bef2faf2a7bc098, []int{0}
}

func (m *BcrtRet) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BcrtRet.Unmarshal(m, b)
}
func (m *BcrtRet) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BcrtRet.Marshal(b, m, deterministic)
}
func (m *BcrtRet) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BcrtRet.Merge(m, src)
}
func (m *BcrtRet) XXX_Size() int {
	return xxx_messageInfo_BcrtRet.Size(m)
}
func (m *BcrtRet) XXX_DiscardUnknown() {
	xxx_messageInfo_BcrtRet.DiscardUnknown(m)
}

var xxx_messageInfo_BcrtRet proto.InternalMessageInfo

func (m *BcrtRet) GetDealerCards() []int32 {
	if m != nil {
		return m.DealerCards
	}
	return nil
}

func (m *BcrtRet) GetPlayerCards() []int32 {
	if m != nil {
		return m.PlayerCards
	}
	return nil
}

func (m *BcrtRet) GetDealerPoints() int32 {
	if m != nil {
		return m.DealerPoints
	}
	return 0
}

func (m *BcrtRet) GetPlayerPoints() int32 {
	if m != nil {
		return m.PlayerPoints
	}
	return 0
}

func (m *BcrtRet) GetWinType() int32 {
	if m != nil {
		return m.WinType
	}
	return 0
}

func (m *BcrtRet) GetPairType() int32 {
	if m != nil {
		return m.PairType
	}
	return 0
}

type BaccaratTableInfo struct {
	PotsMoney            []int64    `protobuf:"varint,1,rep,packed,name=potsMoney,proto3" json:"potsMoney,omitempty"`
	UserPotsMoney        []int64    `protobuf:"varint,2,rep,packed,name=userPotsMoney,proto3" json:"userPotsMoney,omitempty"`
	LatestRet            []*BcrtRet `protobuf:"bytes,3,rep,name=latestRet,proto3" json:"latestRet,omitempty"`
	RoundId              int64      `protobuf:"varint,4,opt,name=roundId,proto3" json:"roundId,omitempty"`
	GameState            int32      `protobuf:"varint,5,opt,name=gameState,proto3" json:"gameState,omitempty"`
	Countdown            int32      `protobuf:"varint,6,opt,name=countdown,proto3" json:"countdown,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *BaccaratTableInfo) Reset()         { *m = BaccaratTableInfo{} }
func (m *BaccaratTableInfo) String() string { return proto.CompactTextString(m) }
func (*BaccaratTableInfo) ProtoMessage()    {}
func (*BaccaratTableInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_4bef2faf2a7bc098, []int{1}
}

func (m *BaccaratTableInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BaccaratTableInfo.Unmarshal(m, b)
}
func (m *BaccaratTableInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BaccaratTableInfo.Marshal(b, m, deterministic)
}
func (m *BaccaratTableInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BaccaratTableInfo.Merge(m, src)
}
func (m *BaccaratTableInfo) XXX_Size() int {
	return xxx_messageInfo_BaccaratTableInfo.Size(m)
}
func (m *BaccaratTableInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_BaccaratTableInfo.DiscardUnknown(m)
}

var xxx_messageInfo_BaccaratTableInfo proto.InternalMessageInfo

func (m *BaccaratTableInfo) GetPotsMoney() []int64 {
	if m != nil {
		return m.PotsMoney
	}
	return nil
}

func (m *BaccaratTableInfo) GetUserPotsMoney() []int64 {
	if m != nil {
		return m.UserPotsMoney
	}
	return nil
}

func (m *BaccaratTableInfo) GetLatestRet() []*BcrtRet {
	if m != nil {
		return m.LatestRet
	}
	return nil
}

func (m *BaccaratTableInfo) GetRoundId() int64 {
	if m != nil {
		return m.RoundId
	}
	return 0
}

func (m *BaccaratTableInfo) GetGameState() int32 {
	if m != nil {
		return m.GameState
	}
	return 0
}

func (m *BaccaratTableInfo) GetCountdown() int32 {
	if m != nil {
		return m.Countdown
	}
	return 0
}

type ChipInInfo struct {
	PotId                int32    `protobuf:"varint,1,opt,name=potId,proto3" json:"potId,omitempty"`
	ChipMoney            int64    `protobuf:"varint,2,opt,name=chipMoney,proto3" json:"chipMoney,omitempty"`
	WinMoney             int64    `protobuf:"varint,3,opt,name=winMoney,proto3" json:"winMoney,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChipInInfo) Reset()         { *m = ChipInInfo{} }
func (m *ChipInInfo) String() string { return proto.CompactTextString(m) }
func (*ChipInInfo) ProtoMessage()    {}
func (*ChipInInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_4bef2faf2a7bc098, []int{2}
}

func (m *ChipInInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChipInInfo.Unmarshal(m, b)
}
func (m *ChipInInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChipInInfo.Marshal(b, m, deterministic)
}
func (m *ChipInInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChipInInfo.Merge(m, src)
}
func (m *ChipInInfo) XXX_Size() int {
	return xxx_messageInfo_ChipInInfo.Size(m)
}
func (m *ChipInInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ChipInInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ChipInInfo proto.InternalMessageInfo

func (m *ChipInInfo) GetPotId() int32 {
	if m != nil {
		return m.PotId
	}
	return 0
}

func (m *ChipInInfo) GetChipMoney() int64 {
	if m != nil {
		return m.ChipMoney
	}
	return 0
}

func (m *ChipInInfo) GetWinMoney() int64 {
	if m != nil {
		return m.WinMoney
	}
	return 0
}

type ChipInReq struct {
	ChipIfo              []*ChipInInfo `protobuf:"bytes,1,rep,name=chipIfo,proto3" json:"chipIfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *ChipInReq) Reset()         { *m = ChipInReq{} }
func (m *ChipInReq) String() string { return proto.CompactTextString(m) }
func (*ChipInReq) ProtoMessage()    {}
func (*ChipInReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_4bef2faf2a7bc098, []int{3}
}

func (m *ChipInReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChipInReq.Unmarshal(m, b)
}
func (m *ChipInReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChipInReq.Marshal(b, m, deterministic)
}
func (m *ChipInReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChipInReq.Merge(m, src)
}
func (m *ChipInReq) XXX_Size() int {
	return xxx_messageInfo_ChipInReq.Size(m)
}
func (m *ChipInReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ChipInReq.DiscardUnknown(m)
}

var xxx_messageInfo_ChipInReq proto.InternalMessageInfo

func (m *ChipInReq) GetChipIfo() []*ChipInInfo {
	if m != nil {
		return m.ChipIfo
	}
	return nil
}

type ChipInRes struct {
	ChipIfo              []*ChipInInfo     `protobuf:"bytes,1,rep,name=chipIfo,proto3" json:"chipIfo,omitempty"`
	Uid                  int32             `protobuf:"varint,2,opt,name=uid,proto3" json:"uid,omitempty"`
	Res                  ChipInRes_ChipRes `protobuf:"varint,3,opt,name=res,proto3,enum=command.ChipInRes_ChipRes" json:"res,omitempty"`
	UserMoney            int64             `protobuf:"varint,4,opt,name=userMoney,proto3" json:"userMoney,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ChipInRes) Reset()         { *m = ChipInRes{} }
func (m *ChipInRes) String() string { return proto.CompactTextString(m) }
func (*ChipInRes) ProtoMessage()    {}
func (*ChipInRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_4bef2faf2a7bc098, []int{4}
}

func (m *ChipInRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChipInRes.Unmarshal(m, b)
}
func (m *ChipInRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChipInRes.Marshal(b, m, deterministic)
}
func (m *ChipInRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChipInRes.Merge(m, src)
}
func (m *ChipInRes) XXX_Size() int {
	return xxx_messageInfo_ChipInRes.Size(m)
}
func (m *ChipInRes) XXX_DiscardUnknown() {
	xxx_messageInfo_ChipInRes.DiscardUnknown(m)
}

var xxx_messageInfo_ChipInRes proto.InternalMessageInfo

func (m *ChipInRes) GetChipIfo() []*ChipInInfo {
	if m != nil {
		return m.ChipIfo
	}
	return nil
}

func (m *ChipInRes) GetUid() int32 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *ChipInRes) GetRes() ChipInRes_ChipRes {
	if m != nil {
		return m.Res
	}
	return ChipInRes_CHIP_OK
}

func (m *ChipInRes) GetUserMoney() int64 {
	if m != nil {
		return m.UserMoney
	}
	return 0
}

type BaccaratSettleInfo struct {
	DealerCards          []int32  `protobuf:"varint,1,rep,packed,name=dealerCards,proto3" json:"dealerCards,omitempty"`
	PlayerCards          []int32  `protobuf:"varint,2,rep,packed,name=playerCards,proto3" json:"playerCards,omitempty"`
	PotsMoney            []int64  `protobuf:"varint,3,rep,packed,name=potsMoney,proto3" json:"potsMoney,omitempty"`
	DealerPoints         int32    `protobuf:"varint,4,opt,name=dealerPoints,proto3" json:"dealerPoints,omitempty"`
	PlayerPoints         int32    `protobuf:"varint,5,opt,name=playerPoints,proto3" json:"playerPoints,omitempty"`
	PotsWin              *BcrtRet `protobuf:"bytes,6,opt,name=potsWin,proto3" json:"potsWin,omitempty"`
	RoundId              int64    `protobuf:"varint,7,opt,name=roundId,proto3" json:"roundId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BaccaratSettleInfo) Reset()         { *m = BaccaratSettleInfo{} }
func (m *BaccaratSettleInfo) String() string { return proto.CompactTextString(m) }
func (*BaccaratSettleInfo) ProtoMessage()    {}
func (*BaccaratSettleInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_4bef2faf2a7bc098, []int{5}
}

func (m *BaccaratSettleInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BaccaratSettleInfo.Unmarshal(m, b)
}
func (m *BaccaratSettleInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BaccaratSettleInfo.Marshal(b, m, deterministic)
}
func (m *BaccaratSettleInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BaccaratSettleInfo.Merge(m, src)
}
func (m *BaccaratSettleInfo) XXX_Size() int {
	return xxx_messageInfo_BaccaratSettleInfo.Size(m)
}
func (m *BaccaratSettleInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_BaccaratSettleInfo.DiscardUnknown(m)
}

var xxx_messageInfo_BaccaratSettleInfo proto.InternalMessageInfo

func (m *BaccaratSettleInfo) GetDealerCards() []int32 {
	if m != nil {
		return m.DealerCards
	}
	return nil
}

func (m *BaccaratSettleInfo) GetPlayerCards() []int32 {
	if m != nil {
		return m.PlayerCards
	}
	return nil
}

func (m *BaccaratSettleInfo) GetPotsMoney() []int64 {
	if m != nil {
		return m.PotsMoney
	}
	return nil
}

func (m *BaccaratSettleInfo) GetDealerPoints() int32 {
	if m != nil {
		return m.DealerPoints
	}
	return 0
}

func (m *BaccaratSettleInfo) GetPlayerPoints() int32 {
	if m != nil {
		return m.PlayerPoints
	}
	return 0
}

func (m *BaccaratSettleInfo) GetPotsWin() *BcrtRet {
	if m != nil {
		return m.PotsWin
	}
	return nil
}

func (m *BaccaratSettleInfo) GetRoundId() int64 {
	if m != nil {
		return m.RoundId
	}
	return 0
}

type UserSettleInfo struct {
	ChipIfo              []*ChipInInfo `protobuf:"bytes,1,rep,name=chipIfo,proto3" json:"chipIfo,omitempty"`
	UserMoney            int64         `protobuf:"varint,2,opt,name=userMoney,proto3" json:"userMoney,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *UserSettleInfo) Reset()         { *m = UserSettleInfo{} }
func (m *UserSettleInfo) String() string { return proto.CompactTextString(m) }
func (*UserSettleInfo) ProtoMessage()    {}
func (*UserSettleInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_4bef2faf2a7bc098, []int{6}
}

func (m *UserSettleInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserSettleInfo.Unmarshal(m, b)
}
func (m *UserSettleInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserSettleInfo.Marshal(b, m, deterministic)
}
func (m *UserSettleInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserSettleInfo.Merge(m, src)
}
func (m *UserSettleInfo) XXX_Size() int {
	return xxx_messageInfo_UserSettleInfo.Size(m)
}
func (m *UserSettleInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_UserSettleInfo.DiscardUnknown(m)
}

var xxx_messageInfo_UserSettleInfo proto.InternalMessageInfo

func (m *UserSettleInfo) GetChipIfo() []*ChipInInfo {
	if m != nil {
		return m.ChipIfo
	}
	return nil
}

func (m *UserSettleInfo) GetUserMoney() int64 {
	if m != nil {
		return m.UserMoney
	}
	return 0
}

type BaccaratUserListReq struct {
	Count                int32    `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BaccaratUserListReq) Reset()         { *m = BaccaratUserListReq{} }
func (m *BaccaratUserListReq) String() string { return proto.CompactTextString(m) }
func (*BaccaratUserListReq) ProtoMessage()    {}
func (*BaccaratUserListReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_4bef2faf2a7bc098, []int{7}
}

func (m *BaccaratUserListReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BaccaratUserListReq.Unmarshal(m, b)
}
func (m *BaccaratUserListReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BaccaratUserListReq.Marshal(b, m, deterministic)
}
func (m *BaccaratUserListReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BaccaratUserListReq.Merge(m, src)
}
func (m *BaccaratUserListReq) XXX_Size() int {
	return xxx_messageInfo_BaccaratUserListReq.Size(m)
}
func (m *BaccaratUserListReq) XXX_DiscardUnknown() {
	xxx_messageInfo_BaccaratUserListReq.DiscardUnknown(m)
}

var xxx_messageInfo_BaccaratUserListReq proto.InternalMessageInfo

func (m *BaccaratUserListReq) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

type BaccaratUser struct {
	Uid                  int32    `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	WinRate              int32    `protobuf:"varint,2,opt,name=winRate,proto3" json:"winRate,omitempty"`
	WinMoney             int64    `protobuf:"varint,3,opt,name=winMoney,proto3" json:"winMoney,omitempty"`
	UserMoney            int64    `protobuf:"varint,4,opt,name=userMoney,proto3" json:"userMoney,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BaccaratUser) Reset()         { *m = BaccaratUser{} }
func (m *BaccaratUser) String() string { return proto.CompactTextString(m) }
func (*BaccaratUser) ProtoMessage()    {}
func (*BaccaratUser) Descriptor() ([]byte, []int) {
	return fileDescriptor_4bef2faf2a7bc098, []int{8}
}

func (m *BaccaratUser) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BaccaratUser.Unmarshal(m, b)
}
func (m *BaccaratUser) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BaccaratUser.Marshal(b, m, deterministic)
}
func (m *BaccaratUser) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BaccaratUser.Merge(m, src)
}
func (m *BaccaratUser) XXX_Size() int {
	return xxx_messageInfo_BaccaratUser.Size(m)
}
func (m *BaccaratUser) XXX_DiscardUnknown() {
	xxx_messageInfo_BaccaratUser.DiscardUnknown(m)
}

var xxx_messageInfo_BaccaratUser proto.InternalMessageInfo

func (m *BaccaratUser) GetUid() int32 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *BaccaratUser) GetWinRate() int32 {
	if m != nil {
		return m.WinRate
	}
	return 0
}

func (m *BaccaratUser) GetWinMoney() int64 {
	if m != nil {
		return m.WinMoney
	}
	return 0
}

func (m *BaccaratUser) GetUserMoney() int64 {
	if m != nil {
		return m.UserMoney
	}
	return 0
}

type BaccaratUserListRes struct {
	Users                []*BaccaratUser `protobuf:"bytes,4,rep,name=users,proto3" json:"users,omitempty"`
	TotalCount           int32           `protobuf:"varint,2,opt,name=totalCount,proto3" json:"totalCount,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *BaccaratUserListRes) Reset()         { *m = BaccaratUserListRes{} }
func (m *BaccaratUserListRes) String() string { return proto.CompactTextString(m) }
func (*BaccaratUserListRes) ProtoMessage()    {}
func (*BaccaratUserListRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_4bef2faf2a7bc098, []int{9}
}

func (m *BaccaratUserListRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BaccaratUserListRes.Unmarshal(m, b)
}
func (m *BaccaratUserListRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BaccaratUserListRes.Marshal(b, m, deterministic)
}
func (m *BaccaratUserListRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BaccaratUserListRes.Merge(m, src)
}
func (m *BaccaratUserListRes) XXX_Size() int {
	return xxx_messageInfo_BaccaratUserListRes.Size(m)
}
func (m *BaccaratUserListRes) XXX_DiscardUnknown() {
	xxx_messageInfo_BaccaratUserListRes.DiscardUnknown(m)
}

var xxx_messageInfo_BaccaratUserListRes proto.InternalMessageInfo

func (m *BaccaratUserListRes) GetUsers() []*BaccaratUser {
	if m != nil {
		return m.Users
	}
	return nil
}

func (m *BaccaratUserListRes) GetTotalCount() int32 {
	if m != nil {
		return m.TotalCount
	}
	return 0
}

func init() {
	proto.RegisterEnum("command.ChipInRes_ChipRes", ChipInRes_ChipRes_name, ChipInRes_ChipRes_value)
	proto.RegisterType((*BcrtRet)(nil), "command.BcrtRet")
	proto.RegisterType((*BaccaratTableInfo)(nil), "command.BaccaratTableInfo")
	proto.RegisterType((*ChipInInfo)(nil), "command.ChipInInfo")
	proto.RegisterType((*ChipInReq)(nil), "command.ChipInReq")
	proto.RegisterType((*ChipInRes)(nil), "command.ChipInRes")
	proto.RegisterType((*BaccaratSettleInfo)(nil), "command.BaccaratSettleInfo")
	proto.RegisterType((*UserSettleInfo)(nil), "command.UserSettleInfo")
	proto.RegisterType((*BaccaratUserListReq)(nil), "command.BaccaratUserListReq")
	proto.RegisterType((*BaccaratUser)(nil), "command.BaccaratUser")
	proto.RegisterType((*BaccaratUserListRes)(nil), "command.BaccaratUserListRes")
}

func init() { proto.RegisterFile("baccarat.proto", fileDescriptor_4bef2faf2a7bc098) }

var fileDescriptor_4bef2faf2a7bc098 = []byte{
	// 572 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x54, 0x51, 0x6b, 0xdb, 0x30,
	0x10, 0x9e, 0xe3, 0xb9, 0x6e, 0x2e, 0x59, 0xc8, 0xd4, 0x0d, 0x4c, 0x19, 0x23, 0x98, 0x3e, 0x84,
	0x75, 0xcb, 0x43, 0xf6, 0xb6, 0xc7, 0x86, 0xc1, 0xcc, 0xd6, 0xa6, 0xa8, 0x1d, 0x63, 0xb0, 0x51,
	0x94, 0x58, 0x5d, 0x0d, 0x89, 0xe5, 0x5a, 0x0a, 0x21, 0xef, 0xfb, 0x5d, 0xfb, 0x03, 0xfb, 0x0d,
	0xfb, 0x2f, 0xe3, 0x24, 0x2b, 0xb2, 0x43, 0xd9, 0x28, 0xf4, 0xcd, 0xf7, 0xdd, 0x77, 0xd6, 0xdd,
	0x77, 0x9f, 0x04, 0xbd, 0x19, 0x9b, 0xcf, 0x59, 0xc9, 0xd4, 0xa8, 0x28, 0x85, 0x12, 0x24, 0x9c,
	0x8b, 0xe5, 0x92, 0xe5, 0x69, 0xfc, 0xdb, 0x83, 0xf0, 0x64, 0x5e, 0x2a, 0xca, 0x15, 0x19, 0x40,
	0x27, 0xe5, 0x6c, 0xc1, 0xcb, 0x09, 0x2b, 0x53, 0x19, 0x79, 0x03, 0x7f, 0x18, 0xd0, 0x3a, 0x84,
	0x8c, 0x62, 0xc1, 0x36, 0x96, 0xd1, 0x32, 0x8c, 0x1a, 0x44, 0x62, 0xe8, 0x9a, 0x82, 0x73, 0x91,
	0xe5, 0x4a, 0x46, 0x8f, 0x07, 0xde, 0x30, 0xa0, 0x0d, 0x0c, 0x39, 0xa6, 0xa4, 0xe2, 0x04, 0x86,
	0x53, 0xc7, 0x48, 0x04, 0xe1, 0x3a, 0xcb, 0x2f, 0x37, 0x05, 0x8f, 0xf6, 0x74, 0xda, 0x86, 0xe4,
	0x10, 0xf6, 0x0b, 0x96, 0x95, 0x3a, 0x15, 0xea, 0xd4, 0x36, 0x8e, 0xff, 0x78, 0xf0, 0xf4, 0xa4,
	0x9a, 0xf4, 0x92, 0xcd, 0x16, 0x3c, 0xc9, 0xaf, 0x05, 0x79, 0x01, 0xed, 0x42, 0x28, 0x79, 0x2a,
	0x72, 0xbe, 0xd1, 0x53, 0xf9, 0xd4, 0x01, 0xe4, 0x08, 0x9e, 0xac, 0x24, 0x9e, 0x6b, 0x19, 0x2d,
	0xcd, 0x68, 0x82, 0x64, 0x04, 0xed, 0x05, 0x53, 0x5c, 0xa2, 0x50, 0x91, 0x3f, 0xf0, 0x87, 0x9d,
	0x71, 0x7f, 0x54, 0x89, 0x38, 0xaa, 0x04, 0xa4, 0x8e, 0x82, 0xfd, 0x97, 0x62, 0x95, 0xa7, 0x49,
	0xaa, 0x25, 0xf0, 0xa9, 0x0d, 0xb1, 0x9b, 0x1f, 0x6c, 0xc9, 0x2f, 0x14, 0x53, 0xbc, 0x1a, 0xdd,
	0x01, 0x98, 0x9d, 0x8b, 0x55, 0xae, 0x52, 0xb1, 0xce, 0xab, 0xc9, 0x1d, 0x10, 0x7f, 0x03, 0x98,
	0xdc, 0x64, 0x45, 0x92, 0xeb, 0xb9, 0x9e, 0x41, 0x50, 0x08, 0x95, 0xa4, 0x91, 0xa7, 0x79, 0x26,
	0xd0, 0x7f, 0xb8, 0xc9, 0x0a, 0x3b, 0x0b, 0x9e, 0xed, 0x00, 0x54, 0x6f, 0x9d, 0xe5, 0x26, 0xe9,
	0xeb, 0xe4, 0x36, 0x8e, 0xdf, 0x41, 0xdb, 0xfc, 0x9d, 0xf2, 0x5b, 0xf2, 0x06, 0x42, 0xac, 0x4a,
	0xae, 0x85, 0x96, 0xac, 0x33, 0x3e, 0xd8, 0x8e, 0xeb, 0x5a, 0xa0, 0x96, 0x13, 0xff, 0xf2, 0x5c,
	0xb1, 0xbc, 0x67, 0x31, 0xe9, 0x83, 0xbf, 0xca, 0x52, 0xdd, 0x6c, 0x40, 0xf1, 0x93, 0xbc, 0x06,
	0xbf, 0xe4, 0x52, 0x77, 0xd8, 0x1b, 0x1f, 0xee, 0x14, 0x53, 0x2e, 0xf5, 0x17, 0xe5, 0x92, 0x22,
	0x0d, 0x47, 0xc6, 0x6d, 0x99, 0xa9, 0x8c, 0xdc, 0x0e, 0x88, 0x8f, 0x20, 0xac, 0xd8, 0xa4, 0x03,
	0xe1, 0xe4, 0x43, 0x72, 0x7e, 0x35, 0xfd, 0xd8, 0x7f, 0x44, 0xba, 0xb0, 0x7f, 0x36, 0xbd, 0x3a,
	0x9d, 0x9e, 0xbd, 0xff, 0xda, 0xf7, 0xe2, 0x9f, 0x2d, 0x20, 0xd6, 0x3a, 0x17, 0x5c, 0xa9, 0xca,
	0x3b, 0x0f, 0x71, 0x27, 0x1a, 0xfe, 0xf3, 0x77, 0xfd, 0xf7, 0x50, 0x37, 0xe6, 0x15, 0x84, 0xf8,
	0xd3, 0x2f, 0x99, 0xf1, 0xcd, 0x5d, 0xfe, 0xb4, 0x84, 0xba, 0x3b, 0xc3, 0x86, 0x3b, 0xe3, 0xef,
	0xd0, 0xfb, 0x2c, 0x79, 0x59, 0x53, 0xe0, 0x9e, 0xbb, 0x6c, 0xec, 0xa2, 0xb5, 0xbb, 0x8b, 0x63,
	0x38, 0xb0, 0x22, 0xe3, 0x31, 0x9f, 0x32, 0xbc, 0x2d, 0xb7, 0xe8, 0x64, 0x6d, 0x72, 0xeb, 0x64,
	0x1d, 0xc4, 0x0a, 0xba, 0x75, 0xb2, 0xb5, 0x89, 0xe7, 0x6c, 0x62, 0x5e, 0x09, 0x8a, 0x37, 0xa9,
	0xb5, 0x7d, 0x25, 0x30, 0xfc, 0x97, 0xcf, 0xff, 0x63, 0x97, 0xd9, 0x5d, 0x2d, 0x4a, 0x72, 0x0c,
	0x01, 0x72, 0x70, 0x3f, 0x28, 0xc2, 0x73, 0x27, 0x6e, 0x8d, 0x4c, 0x0d, 0x87, 0xbc, 0x04, 0x50,
	0x42, 0xb1, 0xc5, 0x44, 0x0f, 0x65, 0x5a, 0xab, 0x21, 0xb3, 0x3d, 0xfd, 0x0a, 0xbf, 0xfd, 0x1b,
	0x00, 0x00, 0xff, 0xff, 0x8a, 0x2f, 0xbd, 0x5b, 0x97, 0x05, 0x00, 0x00,
}
