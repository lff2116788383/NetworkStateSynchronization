// Code generated by protoc-gen-go. DO NOT EDIT.
// source: client.proto

package command

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// 状态
type Code int32

const (
	Code_SUCCESS                Code = 0
	Code_FAILED_UNKNOWN         Code = 1
	Code_FAILED_NO_ENOUGH_MONEY Code = 2
)

var Code_name = map[int32]string{
	0: "SUCCESS",
	1: "FAILED_UNKNOWN",
	2: "FAILED_NO_ENOUGH_MONEY",
}

var Code_value = map[string]int32{
	"SUCCESS":                0,
	"FAILED_UNKNOWN":         1,
	"FAILED_NO_ENOUGH_MONEY": 2,
}

func (x Code) String() string {
	return proto.EnumName(Code_name, int32(x))
}

func (Code) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_014de31d7ac8c57c, []int{0}
}

type SlotsMode_Mode int32

const (
	SlotsMode_UNKNOWN3   SlotsMode_Mode = 0
	SlotsMode_NORMAL     SlotsMode_Mode = 1
	SlotsMode_SMALL_GAME SlotsMode_Mode = 2
	SlotsMode_CRAZY_GAME SlotsMode_Mode = 3
)

var SlotsMode_Mode_name = map[int32]string{
	0: "UNKNOWN3",
	1: "NORMAL",
	2: "SMALL_GAME",
	3: "CRAZY_GAME",
}

var SlotsMode_Mode_value = map[string]int32{
	"UNKNOWN3":   0,
	"NORMAL":     1,
	"SMALL_GAME": 2,
	"CRAZY_GAME": 3,
}

func (x SlotsMode_Mode) String() string {
	return proto.EnumName(SlotsMode_Mode_name, int32(x))
}

func (SlotsMode_Mode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_014de31d7ac8c57c, []int{5, 0}
}

type UserInfo struct {
	Uid                  int32    `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Money                int64    `protobuf:"varint,2,opt,name=money,proto3" json:"money,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserInfo) Reset()         { *m = UserInfo{} }
func (m *UserInfo) String() string { return proto.CompactTextString(m) }
func (*UserInfo) ProtoMessage()    {}
func (*UserInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_014de31d7ac8c57c, []int{0}
}

func (m *UserInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserInfo.Unmarshal(m, b)
}
func (m *UserInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserInfo.Marshal(b, m, deterministic)
}
func (m *UserInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserInfo.Merge(m, src)
}
func (m *UserInfo) XXX_Size() int {
	return xxx_messageInfo_UserInfo.Size(m)
}
func (m *UserInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_UserInfo.DiscardUnknown(m)
}

var xxx_messageInfo_UserInfo proto.InternalMessageInfo

func (m *UserInfo) GetUid() int32 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *UserInfo) GetMoney() int64 {
	if m != nil {
		return m.Money
	}
	return 0
}

//道具
type SlotProp struct {
	Count                int32    `protobuf:"varint,1,opt,name=Count,proto3" json:"Count,omitempty"`
	Value                int32    `protobuf:"varint,2,opt,name=Value,proto3" json:"Value,omitempty"`
	IconUrl              string   `protobuf:"bytes,3,opt,name=IconUrl,proto3" json:"IconUrl,omitempty"`
	Level                string   `protobuf:"bytes,4,opt,name=Level,proto3" json:"Level,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SlotProp) Reset()         { *m = SlotProp{} }
func (m *SlotProp) String() string { return proto.CompactTextString(m) }
func (*SlotProp) ProtoMessage()    {}
func (*SlotProp) Descriptor() ([]byte, []int) {
	return fileDescriptor_014de31d7ac8c57c, []int{1}
}

func (m *SlotProp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SlotProp.Unmarshal(m, b)
}
func (m *SlotProp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SlotProp.Marshal(b, m, deterministic)
}
func (m *SlotProp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SlotProp.Merge(m, src)
}
func (m *SlotProp) XXX_Size() int {
	return xxx_messageInfo_SlotProp.Size(m)
}
func (m *SlotProp) XXX_DiscardUnknown() {
	xxx_messageInfo_SlotProp.DiscardUnknown(m)
}

var xxx_messageInfo_SlotProp proto.InternalMessageInfo

func (m *SlotProp) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *SlotProp) GetValue() int32 {
	if m != nil {
		return m.Value
	}
	return 0
}

func (m *SlotProp) GetIconUrl() string {
	if m != nil {
		return m.IconUrl
	}
	return ""
}

func (m *SlotProp) GetLevel() string {
	if m != nil {
		return m.Level
	}
	return ""
}

//座标 x行 y列 从1开始
type Crdnt struct {
	X                    int32    `protobuf:"varint,1,opt,name=x,proto3" json:"x,omitempty"`
	Y                    int32    `protobuf:"varint,2,opt,name=y,proto3" json:"y,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Crdnt) Reset()         { *m = Crdnt{} }
func (m *Crdnt) String() string { return proto.CompactTextString(m) }
func (*Crdnt) ProtoMessage()    {}
func (*Crdnt) Descriptor() ([]byte, []int) {
	return fileDescriptor_014de31d7ac8c57c, []int{2}
}

func (m *Crdnt) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Crdnt.Unmarshal(m, b)
}
func (m *Crdnt) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Crdnt.Marshal(b, m, deterministic)
}
func (m *Crdnt) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Crdnt.Merge(m, src)
}
func (m *Crdnt) XXX_Size() int {
	return xxx_messageInfo_Crdnt.Size(m)
}
func (m *Crdnt) XXX_DiscardUnknown() {
	xxx_messageInfo_Crdnt.DiscardUnknown(m)
}

var xxx_messageInfo_Crdnt proto.InternalMessageInfo

func (m *Crdnt) GetX() int32 {
	if m != nil {
		return m.X
	}
	return 0
}

func (m *Crdnt) GetY() int32 {
	if m != nil {
		return m.Y
	}
	return 0
}

type Crdnts struct {
	Crd                  []*Crdnt `protobuf:"bytes,1,rep,name=crd,proto3" json:"crd,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Crdnts) Reset()         { *m = Crdnts{} }
func (m *Crdnts) String() string { return proto.CompactTextString(m) }
func (*Crdnts) ProtoMessage()    {}
func (*Crdnts) Descriptor() ([]byte, []int) {
	return fileDescriptor_014de31d7ac8c57c, []int{3}
}

func (m *Crdnts) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Crdnts.Unmarshal(m, b)
}
func (m *Crdnts) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Crdnts.Marshal(b, m, deterministic)
}
func (m *Crdnts) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Crdnts.Merge(m, src)
}
func (m *Crdnts) XXX_Size() int {
	return xxx_messageInfo_Crdnts.Size(m)
}
func (m *Crdnts) XXX_DiscardUnknown() {
	xxx_messageInfo_Crdnts.DiscardUnknown(m)
}

var xxx_messageInfo_Crdnts proto.InternalMessageInfo

func (m *Crdnts) GetCrd() []*Crdnt {
	if m != nil {
		return m.Crd
	}
	return nil
}

type SlotData struct {
	Tid                  int32             `protobuf:"varint,1,opt,name=tid,proto3" json:"tid,omitempty"`
	RestFree             int32             `protobuf:"varint,2,opt,name=restFree,proto3" json:"restFree,omitempty"`
	BetLine              int32             `protobuf:"varint,3,opt,name=betLine,proto3" json:"betLine,omitempty"`
	LastBetMoney         int64             `protobuf:"varint,4,opt,name=lastBetMoney,proto3" json:"lastBetMoney,omitempty"`
	LastFree             int32             `protobuf:"varint,5,opt,name=lastFree,proto3" json:"lastFree,omitempty"`
	LastAwardMoney       int64             `protobuf:"varint,6,opt,name=lastAwardMoney,proto3" json:"lastAwardMoney,omitempty"`
	WinMultiple          int32             `protobuf:"varint,7,opt,name=winMultiple,proto3" json:"winMultiple,omitempty"`
	LotteryMap           []*SlotsCol       `protobuf:"bytes,8,rep,name=lotteryMap,proto3" json:"lotteryMap,omitempty"`
	FreeGameCard         *SlotProp         `protobuf:"bytes,9,opt,name=freeGameCard,proto3" json:"freeGameCard,omitempty"`
	BigWinCard           *SlotProp         `protobuf:"bytes,10,opt,name=bigWinCard,proto3" json:"bigWinCard,omitempty"`
	Level                int32             `protobuf:"varint,11,opt,name=level,proto3" json:"level,omitempty"`
	AliceFw              []int32           `protobuf:"varint,12,rep,packed,name=aliceFw,proto3" json:"aliceFw,omitempty"`
	AliceFwPos           map[int64]*Crdnts `protobuf:"bytes,13,rep,name=aliceFwPos,proto3" json:"aliceFwPos,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	RkJockpotLineBet     int64             `protobuf:"varint,14,opt,name=rkJockpotLineBet,proto3" json:"rkJockpotLineBet,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *SlotData) Reset()         { *m = SlotData{} }
func (m *SlotData) String() string { return proto.CompactTextString(m) }
func (*SlotData) ProtoMessage()    {}
func (*SlotData) Descriptor() ([]byte, []int) {
	return fileDescriptor_014de31d7ac8c57c, []int{4}
}

func (m *SlotData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SlotData.Unmarshal(m, b)
}
func (m *SlotData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SlotData.Marshal(b, m, deterministic)
}
func (m *SlotData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SlotData.Merge(m, src)
}
func (m *SlotData) XXX_Size() int {
	return xxx_messageInfo_SlotData.Size(m)
}
func (m *SlotData) XXX_DiscardUnknown() {
	xxx_messageInfo_SlotData.DiscardUnknown(m)
}

var xxx_messageInfo_SlotData proto.InternalMessageInfo

func (m *SlotData) GetTid() int32 {
	if m != nil {
		return m.Tid
	}
	return 0
}

func (m *SlotData) GetRestFree() int32 {
	if m != nil {
		return m.RestFree
	}
	return 0
}

func (m *SlotData) GetBetLine() int32 {
	if m != nil {
		return m.BetLine
	}
	return 0
}

func (m *SlotData) GetLastBetMoney() int64 {
	if m != nil {
		return m.LastBetMoney
	}
	return 0
}

func (m *SlotData) GetLastFree() int32 {
	if m != nil {
		return m.LastFree
	}
	return 0
}

func (m *SlotData) GetLastAwardMoney() int64 {
	if m != nil {
		return m.LastAwardMoney
	}
	return 0
}

func (m *SlotData) GetWinMultiple() int32 {
	if m != nil {
		return m.WinMultiple
	}
	return 0
}

func (m *SlotData) GetLotteryMap() []*SlotsCol {
	if m != nil {
		return m.LotteryMap
	}
	return nil
}

func (m *SlotData) GetFreeGameCard() *SlotProp {
	if m != nil {
		return m.FreeGameCard
	}
	return nil
}

func (m *SlotData) GetBigWinCard() *SlotProp {
	if m != nil {
		return m.BigWinCard
	}
	return nil
}

func (m *SlotData) GetLevel() int32 {
	if m != nil {
		return m.Level
	}
	return 0
}

func (m *SlotData) GetAliceFw() []int32 {
	if m != nil {
		return m.AliceFw
	}
	return nil
}

func (m *SlotData) GetAliceFwPos() map[int64]*Crdnts {
	if m != nil {
		return m.AliceFwPos
	}
	return nil
}

func (m *SlotData) GetRkJockpotLineBet() int64 {
	if m != nil {
		return m.RkJockpotLineBet
	}
	return 0
}

type SlotsMode struct {
	Mode                 SlotsMode_Mode `protobuf:"varint,1,opt,name=mode,proto3,enum=command.SlotsMode_Mode" json:"mode,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *SlotsMode) Reset()         { *m = SlotsMode{} }
func (m *SlotsMode) String() string { return proto.CompactTextString(m) }
func (*SlotsMode) ProtoMessage()    {}
func (*SlotsMode) Descriptor() ([]byte, []int) {
	return fileDescriptor_014de31d7ac8c57c, []int{5}
}

func (m *SlotsMode) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SlotsMode.Unmarshal(m, b)
}
func (m *SlotsMode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SlotsMode.Marshal(b, m, deterministic)
}
func (m *SlotsMode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SlotsMode.Merge(m, src)
}
func (m *SlotsMode) XXX_Size() int {
	return xxx_messageInfo_SlotsMode.Size(m)
}
func (m *SlotsMode) XXX_DiscardUnknown() {
	xxx_messageInfo_SlotsMode.DiscardUnknown(m)
}

var xxx_messageInfo_SlotsMode proto.InternalMessageInfo

func (m *SlotsMode) GetMode() SlotsMode_Mode {
	if m != nil {
		return m.Mode
	}
	return SlotsMode_UNKNOWN3
}

type JackpotReq struct {
	Tid                  int32    `protobuf:"varint,1,opt,name=tid,proto3" json:"tid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *JackpotReq) Reset()         { *m = JackpotReq{} }
func (m *JackpotReq) String() string { return proto.CompactTextString(m) }
func (*JackpotReq) ProtoMessage()    {}
func (*JackpotReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_014de31d7ac8c57c, []int{6}
}

func (m *JackpotReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JackpotReq.Unmarshal(m, b)
}
func (m *JackpotReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JackpotReq.Marshal(b, m, deterministic)
}
func (m *JackpotReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JackpotReq.Merge(m, src)
}
func (m *JackpotReq) XXX_Size() int {
	return xxx_messageInfo_JackpotReq.Size(m)
}
func (m *JackpotReq) XXX_DiscardUnknown() {
	xxx_messageInfo_JackpotReq.DiscardUnknown(m)
}

var xxx_messageInfo_JackpotReq proto.InternalMessageInfo

func (m *JackpotReq) GetTid() int32 {
	if m != nil {
		return m.Tid
	}
	return 0
}

type JackpotRes struct {
	PotMoney             []int64  `protobuf:"varint,1,rep,packed,name=potMoney,proto3" json:"potMoney,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *JackpotRes) Reset()         { *m = JackpotRes{} }
func (m *JackpotRes) String() string { return proto.CompactTextString(m) }
func (*JackpotRes) ProtoMessage()    {}
func (*JackpotRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_014de31d7ac8c57c, []int{7}
}

func (m *JackpotRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JackpotRes.Unmarshal(m, b)
}
func (m *JackpotRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JackpotRes.Marshal(b, m, deterministic)
}
func (m *JackpotRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JackpotRes.Merge(m, src)
}
func (m *JackpotRes) XXX_Size() int {
	return xxx_messageInfo_JackpotRes.Size(m)
}
func (m *JackpotRes) XXX_DiscardUnknown() {
	xxx_messageInfo_JackpotRes.DiscardUnknown(m)
}

var xxx_messageInfo_JackpotRes proto.InternalMessageInfo

func (m *JackpotRes) GetPotMoney() []int64 {
	if m != nil {
		return m.PotMoney
	}
	return nil
}

type SpinReq struct {
	BetLine              int32    `protobuf:"varint,1,opt,name=betLine,proto3" json:"betLine,omitempty"`
	LineBetMoney         int64    `protobuf:"varint,2,opt,name=lineBetMoney,proto3" json:"lineBetMoney,omitempty"`
	PotMoney             []int64  `protobuf:"varint,3,rep,packed,name=potMoney,proto3" json:"potMoney,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SpinReq) Reset()         { *m = SpinReq{} }
func (m *SpinReq) String() string { return proto.CompactTextString(m) }
func (*SpinReq) ProtoMessage()    {}
func (*SpinReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_014de31d7ac8c57c, []int{8}
}

func (m *SpinReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SpinReq.Unmarshal(m, b)
}
func (m *SpinReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SpinReq.Marshal(b, m, deterministic)
}
func (m *SpinReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SpinReq.Merge(m, src)
}
func (m *SpinReq) XXX_Size() int {
	return xxx_messageInfo_SpinReq.Size(m)
}
func (m *SpinReq) XXX_DiscardUnknown() {
	xxx_messageInfo_SpinReq.DiscardUnknown(m)
}

var xxx_messageInfo_SpinReq proto.InternalMessageInfo

func (m *SpinReq) GetBetLine() int32 {
	if m != nil {
		return m.BetLine
	}
	return 0
}

func (m *SpinReq) GetLineBetMoney() int64 {
	if m != nil {
		return m.LineBetMoney
	}
	return 0
}

func (m *SpinReq) GetPotMoney() []int64 {
	if m != nil {
		return m.PotMoney
	}
	return nil
}

type SlotsLine struct {
	LineID               int32    `protobuf:"varint,1,opt,name=lineID,proto3" json:"lineID,omitempty"`
	LineMoney            int64    `protobuf:"varint,2,opt,name=lineMoney,proto3" json:"lineMoney,omitempty"`
	PicNum               int32    `protobuf:"varint,3,opt,name=picNum,proto3" json:"picNum,omitempty"`
	WinMultiple          int32    `protobuf:"varint,4,opt,name=winMultiple,proto3" json:"winMultiple,omitempty"`
	Odds                 int32    `protobuf:"varint,5,opt,name=odds,proto3" json:"odds,omitempty"`
	LineType             int32    `protobuf:"varint,6,opt,name=lineType,proto3" json:"lineType,omitempty"`
	PicId                int32    `protobuf:"varint,7,opt,name=picId,proto3" json:"picId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SlotsLine) Reset()         { *m = SlotsLine{} }
func (m *SlotsLine) String() string { return proto.CompactTextString(m) }
func (*SlotsLine) ProtoMessage()    {}
func (*SlotsLine) Descriptor() ([]byte, []int) {
	return fileDescriptor_014de31d7ac8c57c, []int{9}
}

func (m *SlotsLine) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SlotsLine.Unmarshal(m, b)
}
func (m *SlotsLine) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SlotsLine.Marshal(b, m, deterministic)
}
func (m *SlotsLine) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SlotsLine.Merge(m, src)
}
func (m *SlotsLine) XXX_Size() int {
	return xxx_messageInfo_SlotsLine.Size(m)
}
func (m *SlotsLine) XXX_DiscardUnknown() {
	xxx_messageInfo_SlotsLine.DiscardUnknown(m)
}

var xxx_messageInfo_SlotsLine proto.InternalMessageInfo

func (m *SlotsLine) GetLineID() int32 {
	if m != nil {
		return m.LineID
	}
	return 0
}

func (m *SlotsLine) GetLineMoney() int64 {
	if m != nil {
		return m.LineMoney
	}
	return 0
}

func (m *SlotsLine) GetPicNum() int32 {
	if m != nil {
		return m.PicNum
	}
	return 0
}

func (m *SlotsLine) GetWinMultiple() int32 {
	if m != nil {
		return m.WinMultiple
	}
	return 0
}

func (m *SlotsLine) GetOdds() int32 {
	if m != nil {
		return m.Odds
	}
	return 0
}

func (m *SlotsLine) GetLineType() int32 {
	if m != nil {
		return m.LineType
	}
	return 0
}

func (m *SlotsLine) GetPicId() int32 {
	if m != nil {
		return m.PicId
	}
	return 0
}

type SlotsCol struct {
	Icons                []int32  `protobuf:"varint,1,rep,packed,name=icons,proto3" json:"icons,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SlotsCol) Reset()         { *m = SlotsCol{} }
func (m *SlotsCol) String() string { return proto.CompactTextString(m) }
func (*SlotsCol) ProtoMessage()    {}
func (*SlotsCol) Descriptor() ([]byte, []int) {
	return fileDescriptor_014de31d7ac8c57c, []int{10}
}

func (m *SlotsCol) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SlotsCol.Unmarshal(m, b)
}
func (m *SlotsCol) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SlotsCol.Marshal(b, m, deterministic)
}
func (m *SlotsCol) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SlotsCol.Merge(m, src)
}
func (m *SlotsCol) XXX_Size() int {
	return xxx_messageInfo_SlotsCol.Size(m)
}
func (m *SlotsCol) XXX_DiscardUnknown() {
	xxx_messageInfo_SlotsCol.DiscardUnknown(m)
}

var xxx_messageInfo_SlotsCol proto.InternalMessageInfo

func (m *SlotsCol) GetIcons() []int32 {
	if m != nil {
		return m.Icons
	}
	return nil
}

type SpinRes struct {
	LotteryMap           []*SlotsCol  `protobuf:"bytes,1,rep,name=lotteryMap,proto3" json:"lotteryMap,omitempty"`
	LineMap              []*SlotsLine `protobuf:"bytes,2,rep,name=lineMap,proto3" json:"lineMap,omitempty"`
	TotalOdds            int32        `protobuf:"varint,3,opt,name=totalOdds,proto3" json:"totalOdds,omitempty"`
	WinMoney             int64        `protobuf:"varint,4,opt,name=winMoney,proto3" json:"winMoney,omitempty"`
	UserMoney            int64        `protobuf:"varint,5,opt,name=userMoney,proto3" json:"userMoney,omitempty"`
	IsFree               int32        `protobuf:"varint,6,opt,name=isFree,proto3" json:"isFree,omitempty"`
	FreeTimes            int32        `protobuf:"varint,7,opt,name=freeTimes,proto3" json:"freeTimes,omitempty"`
	RestFree             int32        `protobuf:"varint,8,opt,name=restFree,proto3" json:"restFree,omitempty"`
	JackpotType          int32        `protobuf:"varint,10,opt,name=jackpotType,proto3" json:"jackpotType,omitempty"`
	JackpotMoney         int64        `protobuf:"varint,11,opt,name=jackpotMoney,proto3" json:"jackpotMoney,omitempty"`
	TotalFreeTimes       int32        `protobuf:"varint,12,opt,name=totalFreeTimes,proto3" json:"totalFreeTimes,omitempty"`
	IsSmallGame          int32        `protobuf:"varint,13,opt,name=IsSmallGame,proto3" json:"IsSmallGame,omitempty"`
	WinMultiple          int32        `protobuf:"varint,14,opt,name=winMultiple,proto3" json:"winMultiple,omitempty"`
	RoundId              int32        `protobuf:"varint,15,opt,name=roundId,proto3" json:"roundId,omitempty"`
	BigWinMoney          int64        `protobuf:"varint,16,opt,name=bigWinMoney,proto3" json:"bigWinMoney,omitempty"`
	Level                int32        `protobuf:"varint,17,opt,name=level,proto3" json:"level,omitempty"`
	LevelExp             int64        `protobuf:"varint,18,opt,name=levelExp,proto3" json:"levelExp,omitempty"`
	SmallGameWin         int64        `protobuf:"varint,19,opt,name=smallGameWin,proto3" json:"smallGameWin,omitempty"`
	BonusCount           int32        `protobuf:"varint,20,opt,name=bonusCount,proto3" json:"bonusCount,omitempty"`
	ScatterCount         int32        `protobuf:"varint,21,opt,name=scatterCount,proto3" json:"scatterCount,omitempty"`
	IsControl            int32        `protobuf:"varint,22,opt,name=isControl,proto3" json:"isControl,omitempty"`
	IsOpenControl        int32        `protobuf:"varint,23,opt,name=isOpenControl,proto3" json:"isOpenControl,omitempty"`
	FeatureType          string       `protobuf:"bytes,24,opt,name=featureType,proto3" json:"featureType,omitempty"`
	RkIcons              *RkIconsRes  `protobuf:"bytes,25,opt,name=rkIcons,proto3" json:"rkIcons,omitempty"`
	FreeTotalWinMoney    int64        `protobuf:"varint,26,opt,name=freeTotalWinMoney,proto3" json:"freeTotalWinMoney,omitempty"`
	Debug                string       `protobuf:"bytes,27,opt,name=debug,proto3" json:"debug,omitempty"`
	Code                 Code         `protobuf:"varint,28,opt,name=code,proto3,enum=command.Code" json:"code,omitempty"`
	Cheque               int64        `protobuf:"varint,29,opt,name=cheque,proto3" json:"cheque,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *SpinRes) Reset()         { *m = SpinRes{} }
func (m *SpinRes) String() string { return proto.CompactTextString(m) }
func (*SpinRes) ProtoMessage()    {}
func (*SpinRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_014de31d7ac8c57c, []int{11}
}

func (m *SpinRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SpinRes.Unmarshal(m, b)
}
func (m *SpinRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SpinRes.Marshal(b, m, deterministic)
}
func (m *SpinRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SpinRes.Merge(m, src)
}
func (m *SpinRes) XXX_Size() int {
	return xxx_messageInfo_SpinRes.Size(m)
}
func (m *SpinRes) XXX_DiscardUnknown() {
	xxx_messageInfo_SpinRes.DiscardUnknown(m)
}

var xxx_messageInfo_SpinRes proto.InternalMessageInfo

func (m *SpinRes) GetLotteryMap() []*SlotsCol {
	if m != nil {
		return m.LotteryMap
	}
	return nil
}

func (m *SpinRes) GetLineMap() []*SlotsLine {
	if m != nil {
		return m.LineMap
	}
	return nil
}

func (m *SpinRes) GetTotalOdds() int32 {
	if m != nil {
		return m.TotalOdds
	}
	return 0
}

func (m *SpinRes) GetWinMoney() int64 {
	if m != nil {
		return m.WinMoney
	}
	return 0
}

func (m *SpinRes) GetUserMoney() int64 {
	if m != nil {
		return m.UserMoney
	}
	return 0
}

func (m *SpinRes) GetIsFree() int32 {
	if m != nil {
		return m.IsFree
	}
	return 0
}

func (m *SpinRes) GetFreeTimes() int32 {
	if m != nil {
		return m.FreeTimes
	}
	return 0
}

func (m *SpinRes) GetRestFree() int32 {
	if m != nil {
		return m.RestFree
	}
	return 0
}

func (m *SpinRes) GetJackpotType() int32 {
	if m != nil {
		return m.JackpotType
	}
	return 0
}

func (m *SpinRes) GetJackpotMoney() int64 {
	if m != nil {
		return m.JackpotMoney
	}
	return 0
}

func (m *SpinRes) GetTotalFreeTimes() int32 {
	if m != nil {
		return m.TotalFreeTimes
	}
	return 0
}

func (m *SpinRes) GetIsSmallGame() int32 {
	if m != nil {
		return m.IsSmallGame
	}
	return 0
}

func (m *SpinRes) GetWinMultiple() int32 {
	if m != nil {
		return m.WinMultiple
	}
	return 0
}

func (m *SpinRes) GetRoundId() int32 {
	if m != nil {
		return m.RoundId
	}
	return 0
}

func (m *SpinRes) GetBigWinMoney() int64 {
	if m != nil {
		return m.BigWinMoney
	}
	return 0
}

func (m *SpinRes) GetLevel() int32 {
	if m != nil {
		return m.Level
	}
	return 0
}

func (m *SpinRes) GetLevelExp() int64 {
	if m != nil {
		return m.LevelExp
	}
	return 0
}

func (m *SpinRes) GetSmallGameWin() int64 {
	if m != nil {
		return m.SmallGameWin
	}
	return 0
}

func (m *SpinRes) GetBonusCount() int32 {
	if m != nil {
		return m.BonusCount
	}
	return 0
}

func (m *SpinRes) GetScatterCount() int32 {
	if m != nil {
		return m.ScatterCount
	}
	return 0
}

func (m *SpinRes) GetIsControl() int32 {
	if m != nil {
		return m.IsControl
	}
	return 0
}

func (m *SpinRes) GetIsOpenControl() int32 {
	if m != nil {
		return m.IsOpenControl
	}
	return 0
}

func (m *SpinRes) GetFeatureType() string {
	if m != nil {
		return m.FeatureType
	}
	return ""
}

func (m *SpinRes) GetRkIcons() *RkIconsRes {
	if m != nil {
		return m.RkIcons
	}
	return nil
}

func (m *SpinRes) GetFreeTotalWinMoney() int64 {
	if m != nil {
		return m.FreeTotalWinMoney
	}
	return 0
}

func (m *SpinRes) GetDebug() string {
	if m != nil {
		return m.Debug
	}
	return ""
}

func (m *SpinRes) GetCode() Code {
	if m != nil {
		return m.Code
	}
	return Code_SUCCESS
}

func (m *SpinRes) GetCheque() int64 {
	if m != nil {
		return m.Cheque
	}
	return 0
}

//统一玩小游戏请求
type SmallGameReq struct {
	Position             int32    `protobuf:"varint,1,opt,name=position,proto3" json:"position,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SmallGameReq) Reset()         { *m = SmallGameReq{} }
func (m *SmallGameReq) String() string { return proto.CompactTextString(m) }
func (*SmallGameReq) ProtoMessage()    {}
func (*SmallGameReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_014de31d7ac8c57c, []int{12}
}

func (m *SmallGameReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SmallGameReq.Unmarshal(m, b)
}
func (m *SmallGameReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SmallGameReq.Marshal(b, m, deterministic)
}
func (m *SmallGameReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SmallGameReq.Merge(m, src)
}
func (m *SmallGameReq) XXX_Size() int {
	return xxx_messageInfo_SmallGameReq.Size(m)
}
func (m *SmallGameReq) XXX_DiscardUnknown() {
	xxx_messageInfo_SmallGameReq.DiscardUnknown(m)
}

var xxx_messageInfo_SmallGameReq proto.InternalMessageInfo

func (m *SmallGameReq) GetPosition() int32 {
	if m != nil {
		return m.Position
	}
	return 0
}

//睡美人小游戏
type SbSmallGameItem struct {
	Row                  int32    `protobuf:"varint,1,opt,name=row,proto3" json:"row,omitempty"`
	Col                  int32    `protobuf:"varint,2,opt,name=col,proto3" json:"col,omitempty"`
	Status               int32    `protobuf:"varint,3,opt,name=status,proto3" json:"status,omitempty"`
	Content              int32    `protobuf:"varint,4,opt,name=content,proto3" json:"content,omitempty"`
	Money                int64    `protobuf:"varint,5,opt,name=money,proto3" json:"money,omitempty"`
	Odd                  int32    `protobuf:"varint,6,opt,name=odd,proto3" json:"odd,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SbSmallGameItem) Reset()         { *m = SbSmallGameItem{} }
func (m *SbSmallGameItem) String() string { return proto.CompactTextString(m) }
func (*SbSmallGameItem) ProtoMessage()    {}
func (*SbSmallGameItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_014de31d7ac8c57c, []int{13}
}

func (m *SbSmallGameItem) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SbSmallGameItem.Unmarshal(m, b)
}
func (m *SbSmallGameItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SbSmallGameItem.Marshal(b, m, deterministic)
}
func (m *SbSmallGameItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SbSmallGameItem.Merge(m, src)
}
func (m *SbSmallGameItem) XXX_Size() int {
	return xxx_messageInfo_SbSmallGameItem.Size(m)
}
func (m *SbSmallGameItem) XXX_DiscardUnknown() {
	xxx_messageInfo_SbSmallGameItem.DiscardUnknown(m)
}

var xxx_messageInfo_SbSmallGameItem proto.InternalMessageInfo

func (m *SbSmallGameItem) GetRow() int32 {
	if m != nil {
		return m.Row
	}
	return 0
}

func (m *SbSmallGameItem) GetCol() int32 {
	if m != nil {
		return m.Col
	}
	return 0
}

func (m *SbSmallGameItem) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *SbSmallGameItem) GetContent() int32 {
	if m != nil {
		return m.Content
	}
	return 0
}

func (m *SbSmallGameItem) GetMoney() int64 {
	if m != nil {
		return m.Money
	}
	return 0
}

func (m *SbSmallGameItem) GetOdd() int32 {
	if m != nil {
		return m.Odd
	}
	return 0
}

type SbSmallGameStatus struct {
	Items                []*SbSmallGameItem `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	WinMoney             int64              `protobuf:"varint,2,opt,name=winMoney,proto3" json:"winMoney,omitempty"`
	BonusCount           int32              `protobuf:"varint,3,opt,name=bonusCount,proto3" json:"bonusCount,omitempty"`
	ShowedLine           int32              `protobuf:"varint,4,opt,name=showedLine,proto3" json:"showedLine,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *SbSmallGameStatus) Reset()         { *m = SbSmallGameStatus{} }
func (m *SbSmallGameStatus) String() string { return proto.CompactTextString(m) }
func (*SbSmallGameStatus) ProtoMessage()    {}
func (*SbSmallGameStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_014de31d7ac8c57c, []int{14}
}

func (m *SbSmallGameStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SbSmallGameStatus.Unmarshal(m, b)
}
func (m *SbSmallGameStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SbSmallGameStatus.Marshal(b, m, deterministic)
}
func (m *SbSmallGameStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SbSmallGameStatus.Merge(m, src)
}
func (m *SbSmallGameStatus) XXX_Size() int {
	return xxx_messageInfo_SbSmallGameStatus.Size(m)
}
func (m *SbSmallGameStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_SbSmallGameStatus.DiscardUnknown(m)
}

var xxx_messageInfo_SbSmallGameStatus proto.InternalMessageInfo

func (m *SbSmallGameStatus) GetItems() []*SbSmallGameItem {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *SbSmallGameStatus) GetWinMoney() int64 {
	if m != nil {
		return m.WinMoney
	}
	return 0
}

func (m *SbSmallGameStatus) GetBonusCount() int32 {
	if m != nil {
		return m.BonusCount
	}
	return 0
}

func (m *SbSmallGameStatus) GetShowedLine() int32 {
	if m != nil {
		return m.ShowedLine
	}
	return 0
}

type SleepingBeautySmallGameReq struct {
	Row                  int32    `protobuf:"varint,1,opt,name=row,proto3" json:"row,omitempty"`
	Col                  int32    `protobuf:"varint,2,opt,name=col,proto3" json:"col,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SleepingBeautySmallGameReq) Reset()         { *m = SleepingBeautySmallGameReq{} }
func (m *SleepingBeautySmallGameReq) String() string { return proto.CompactTextString(m) }
func (*SleepingBeautySmallGameReq) ProtoMessage()    {}
func (*SleepingBeautySmallGameReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_014de31d7ac8c57c, []int{15}
}

func (m *SleepingBeautySmallGameReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SleepingBeautySmallGameReq.Unmarshal(m, b)
}
func (m *SleepingBeautySmallGameReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SleepingBeautySmallGameReq.Marshal(b, m, deterministic)
}
func (m *SleepingBeautySmallGameReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SleepingBeautySmallGameReq.Merge(m, src)
}
func (m *SleepingBeautySmallGameReq) XXX_Size() int {
	return xxx_messageInfo_SleepingBeautySmallGameReq.Size(m)
}
func (m *SleepingBeautySmallGameReq) XXX_DiscardUnknown() {
	xxx_messageInfo_SleepingBeautySmallGameReq.DiscardUnknown(m)
}

var xxx_messageInfo_SleepingBeautySmallGameReq proto.InternalMessageInfo

func (m *SleepingBeautySmallGameReq) GetRow() int32 {
	if m != nil {
		return m.Row
	}
	return 0
}

func (m *SleepingBeautySmallGameReq) GetCol() int32 {
	if m != nil {
		return m.Col
	}
	return 0
}

//财神爷小游戏
type WgSmallGameItem struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Odd                  int32    `protobuf:"varint,2,opt,name=odd,proto3" json:"odd,omitempty"`
	Status               int32    `protobuf:"varint,3,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WgSmallGameItem) Reset()         { *m = WgSmallGameItem{} }
func (m *WgSmallGameItem) String() string { return proto.CompactTextString(m) }
func (*WgSmallGameItem) ProtoMessage()    {}
func (*WgSmallGameItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_014de31d7ac8c57c, []int{16}
}

func (m *WgSmallGameItem) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WgSmallGameItem.Unmarshal(m, b)
}
func (m *WgSmallGameItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WgSmallGameItem.Marshal(b, m, deterministic)
}
func (m *WgSmallGameItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WgSmallGameItem.Merge(m, src)
}
func (m *WgSmallGameItem) XXX_Size() int {
	return xxx_messageInfo_WgSmallGameItem.Size(m)
}
func (m *WgSmallGameItem) XXX_DiscardUnknown() {
	xxx_messageInfo_WgSmallGameItem.DiscardUnknown(m)
}

var xxx_messageInfo_WgSmallGameItem proto.InternalMessageInfo

func (m *WgSmallGameItem) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *WgSmallGameItem) GetOdd() int32 {
	if m != nil {
		return m.Odd
	}
	return 0
}

func (m *WgSmallGameItem) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

type WgSmallGameStatus struct {
	Items                []*WgSmallGameItem `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	MaxClickCount        int32              `protobuf:"varint,2,opt,name=maxClickCount,proto3" json:"maxClickCount,omitempty"`
	MaxWgCount           int32              `protobuf:"varint,3,opt,name=maxWgCount,proto3" json:"maxWgCount,omitempty"`
	WinMoney             int64              `protobuf:"varint,4,opt,name=winMoney,proto3" json:"winMoney,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *WgSmallGameStatus) Reset()         { *m = WgSmallGameStatus{} }
func (m *WgSmallGameStatus) String() string { return proto.CompactTextString(m) }
func (*WgSmallGameStatus) ProtoMessage()    {}
func (*WgSmallGameStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_014de31d7ac8c57c, []int{17}
}

func (m *WgSmallGameStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WgSmallGameStatus.Unmarshal(m, b)
}
func (m *WgSmallGameStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WgSmallGameStatus.Marshal(b, m, deterministic)
}
func (m *WgSmallGameStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WgSmallGameStatus.Merge(m, src)
}
func (m *WgSmallGameStatus) XXX_Size() int {
	return xxx_messageInfo_WgSmallGameStatus.Size(m)
}
func (m *WgSmallGameStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_WgSmallGameStatus.DiscardUnknown(m)
}

var xxx_messageInfo_WgSmallGameStatus proto.InternalMessageInfo

func (m *WgSmallGameStatus) GetItems() []*WgSmallGameItem {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *WgSmallGameStatus) GetMaxClickCount() int32 {
	if m != nil {
		return m.MaxClickCount
	}
	return 0
}

func (m *WgSmallGameStatus) GetMaxWgCount() int32 {
	if m != nil {
		return m.MaxWgCount
	}
	return 0
}

func (m *WgSmallGameStatus) GetWinMoney() int64 {
	if m != nil {
		return m.WinMoney
	}
	return 0
}

//财神爷狂热模式
type WgCrazyGameItem struct {
	Odd                  int32    `protobuf:"varint,1,opt,name=odd,proto3" json:"odd,omitempty"`
	Count                int32    `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WgCrazyGameItem) Reset()         { *m = WgCrazyGameItem{} }
func (m *WgCrazyGameItem) String() string { return proto.CompactTextString(m) }
func (*WgCrazyGameItem) ProtoMessage()    {}
func (*WgCrazyGameItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_014de31d7ac8c57c, []int{18}
}

func (m *WgCrazyGameItem) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WgCrazyGameItem.Unmarshal(m, b)
}
func (m *WgCrazyGameItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WgCrazyGameItem.Marshal(b, m, deterministic)
}
func (m *WgCrazyGameItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WgCrazyGameItem.Merge(m, src)
}
func (m *WgCrazyGameItem) XXX_Size() int {
	return xxx_messageInfo_WgCrazyGameItem.Size(m)
}
func (m *WgCrazyGameItem) XXX_DiscardUnknown() {
	xxx_messageInfo_WgCrazyGameItem.DiscardUnknown(m)
}

var xxx_messageInfo_WgCrazyGameItem proto.InternalMessageInfo

func (m *WgCrazyGameItem) GetOdd() int32 {
	if m != nil {
		return m.Odd
	}
	return 0
}

func (m *WgCrazyGameItem) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

type WgCrazyGameStatus struct {
	LotteryMap           []*SlotsCol        `protobuf:"bytes,1,rep,name=lotteryMap,proto3" json:"lotteryMap,omitempty"`
	OddsMap              []*WgCrazyGameItem `protobuf:"bytes,2,rep,name=oddsMap,proto3" json:"oddsMap,omitempty"`
	RestSpinCount        int32              `protobuf:"varint,3,opt,name=restSpinCount,proto3" json:"restSpinCount,omitempty"`
	WinMoney             int64              `protobuf:"varint,4,opt,name=winMoney,proto3" json:"winMoney,omitempty"`
	BetMoney             int64              `protobuf:"varint,5,opt,name=betMoney,proto3" json:"betMoney,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *WgCrazyGameStatus) Reset()         { *m = WgCrazyGameStatus{} }
func (m *WgCrazyGameStatus) String() string { return proto.CompactTextString(m) }
func (*WgCrazyGameStatus) ProtoMessage()    {}
func (*WgCrazyGameStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_014de31d7ac8c57c, []int{19}
}

func (m *WgCrazyGameStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WgCrazyGameStatus.Unmarshal(m, b)
}
func (m *WgCrazyGameStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WgCrazyGameStatus.Marshal(b, m, deterministic)
}
func (m *WgCrazyGameStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WgCrazyGameStatus.Merge(m, src)
}
func (m *WgCrazyGameStatus) XXX_Size() int {
	return xxx_messageInfo_WgCrazyGameStatus.Size(m)
}
func (m *WgCrazyGameStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_WgCrazyGameStatus.DiscardUnknown(m)
}

var xxx_messageInfo_WgCrazyGameStatus proto.InternalMessageInfo

func (m *WgCrazyGameStatus) GetLotteryMap() []*SlotsCol {
	if m != nil {
		return m.LotteryMap
	}
	return nil
}

func (m *WgCrazyGameStatus) GetOddsMap() []*WgCrazyGameItem {
	if m != nil {
		return m.OddsMap
	}
	return nil
}

func (m *WgCrazyGameStatus) GetRestSpinCount() int32 {
	if m != nil {
		return m.RestSpinCount
	}
	return 0
}

func (m *WgCrazyGameStatus) GetWinMoney() int64 {
	if m != nil {
		return m.WinMoney
	}
	return 0
}

func (m *WgCrazyGameStatus) GetBetMoney() int64 {
	if m != nil {
		return m.BetMoney
	}
	return 0
}

//凤凰小游戏
type PhSmallGameItem struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Color                int32    `protobuf:"varint,2,opt,name=color,proto3" json:"color,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PhSmallGameItem) Reset()         { *m = PhSmallGameItem{} }
func (m *PhSmallGameItem) String() string { return proto.CompactTextString(m) }
func (*PhSmallGameItem) ProtoMessage()    {}
func (*PhSmallGameItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_014de31d7ac8c57c, []int{20}
}

func (m *PhSmallGameItem) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PhSmallGameItem.Unmarshal(m, b)
}
func (m *PhSmallGameItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PhSmallGameItem.Marshal(b, m, deterministic)
}
func (m *PhSmallGameItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PhSmallGameItem.Merge(m, src)
}
func (m *PhSmallGameItem) XXX_Size() int {
	return xxx_messageInfo_PhSmallGameItem.Size(m)
}
func (m *PhSmallGameItem) XXX_DiscardUnknown() {
	xxx_messageInfo_PhSmallGameItem.DiscardUnknown(m)
}

var xxx_messageInfo_PhSmallGameItem proto.InternalMessageInfo

func (m *PhSmallGameItem) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *PhSmallGameItem) GetColor() int32 {
	if m != nil {
		return m.Color
	}
	return 0
}

type PhSmallGameStatus struct {
	Items                []*PhSmallGameItem `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	WinMoney             int64              `protobuf:"varint,2,opt,name=winMoney,proto3" json:"winMoney,omitempty"`
	JackpotMoney         int64              `protobuf:"varint,3,opt,name=jackpotMoney,proto3" json:"jackpotMoney,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *PhSmallGameStatus) Reset()         { *m = PhSmallGameStatus{} }
func (m *PhSmallGameStatus) String() string { return proto.CompactTextString(m) }
func (*PhSmallGameStatus) ProtoMessage()    {}
func (*PhSmallGameStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_014de31d7ac8c57c, []int{21}
}

func (m *PhSmallGameStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PhSmallGameStatus.Unmarshal(m, b)
}
func (m *PhSmallGameStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PhSmallGameStatus.Marshal(b, m, deterministic)
}
func (m *PhSmallGameStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PhSmallGameStatus.Merge(m, src)
}
func (m *PhSmallGameStatus) XXX_Size() int {
	return xxx_messageInfo_PhSmallGameStatus.Size(m)
}
func (m *PhSmallGameStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_PhSmallGameStatus.DiscardUnknown(m)
}

var xxx_messageInfo_PhSmallGameStatus proto.InternalMessageInfo

func (m *PhSmallGameStatus) GetItems() []*PhSmallGameItem {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *PhSmallGameStatus) GetWinMoney() int64 {
	if m != nil {
		return m.WinMoney
	}
	return 0
}

func (m *PhSmallGameStatus) GetJackpotMoney() int64 {
	if m != nil {
		return m.JackpotMoney
	}
	return 0
}

//万圣节小游戏
type HlSmallGameItem struct {
	IconA                int32    `protobuf:"varint,1,opt,name=iconA,proto3" json:"iconA,omitempty"`
	IconB                int32    `protobuf:"varint,2,opt,name=iconB,proto3" json:"iconB,omitempty"`
	IconC                int32    `protobuf:"varint,3,opt,name=iconC,proto3" json:"iconC,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HlSmallGameItem) Reset()         { *m = HlSmallGameItem{} }
func (m *HlSmallGameItem) String() string { return proto.CompactTextString(m) }
func (*HlSmallGameItem) ProtoMessage()    {}
func (*HlSmallGameItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_014de31d7ac8c57c, []int{22}
}

func (m *HlSmallGameItem) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HlSmallGameItem.Unmarshal(m, b)
}
func (m *HlSmallGameItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HlSmallGameItem.Marshal(b, m, deterministic)
}
func (m *HlSmallGameItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HlSmallGameItem.Merge(m, src)
}
func (m *HlSmallGameItem) XXX_Size() int {
	return xxx_messageInfo_HlSmallGameItem.Size(m)
}
func (m *HlSmallGameItem) XXX_DiscardUnknown() {
	xxx_messageInfo_HlSmallGameItem.DiscardUnknown(m)
}

var xxx_messageInfo_HlSmallGameItem proto.InternalMessageInfo

func (m *HlSmallGameItem) GetIconA() int32 {
	if m != nil {
		return m.IconA
	}
	return 0
}

func (m *HlSmallGameItem) GetIconB() int32 {
	if m != nil {
		return m.IconB
	}
	return 0
}

func (m *HlSmallGameItem) GetIconC() int32 {
	if m != nil {
		return m.IconC
	}
	return 0
}

type HlSmallGameStatus struct {
	Icons                []int32            `protobuf:"varint,1,rep,packed,name=icons,proto3" json:"icons,omitempty"`
	Items                []*HlSmallGameItem `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
	RestOpenCount        int32              `protobuf:"varint,3,opt,name=restOpenCount,proto3" json:"restOpenCount,omitempty"`
	WinMoney             int64              `protobuf:"varint,4,opt,name=winMoney,proto3" json:"winMoney,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *HlSmallGameStatus) Reset()         { *m = HlSmallGameStatus{} }
func (m *HlSmallGameStatus) String() string { return proto.CompactTextString(m) }
func (*HlSmallGameStatus) ProtoMessage()    {}
func (*HlSmallGameStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_014de31d7ac8c57c, []int{23}
}

func (m *HlSmallGameStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HlSmallGameStatus.Unmarshal(m, b)
}
func (m *HlSmallGameStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HlSmallGameStatus.Marshal(b, m, deterministic)
}
func (m *HlSmallGameStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HlSmallGameStatus.Merge(m, src)
}
func (m *HlSmallGameStatus) XXX_Size() int {
	return xxx_messageInfo_HlSmallGameStatus.Size(m)
}
func (m *HlSmallGameStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_HlSmallGameStatus.DiscardUnknown(m)
}

var xxx_messageInfo_HlSmallGameStatus proto.InternalMessageInfo

func (m *HlSmallGameStatus) GetIcons() []int32 {
	if m != nil {
		return m.Icons
	}
	return nil
}

func (m *HlSmallGameStatus) GetItems() []*HlSmallGameItem {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *HlSmallGameStatus) GetRestOpenCount() int32 {
	if m != nil {
		return m.RestOpenCount
	}
	return 0
}

func (m *HlSmallGameStatus) GetWinMoney() int64 {
	if m != nil {
		return m.WinMoney
	}
	return 0
}

//水果派对小游戏
type FpSmallGameItem struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Color                int32    `protobuf:"varint,2,opt,name=color,proto3" json:"color,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FpSmallGameItem) Reset()         { *m = FpSmallGameItem{} }
func (m *FpSmallGameItem) String() string { return proto.CompactTextString(m) }
func (*FpSmallGameItem) ProtoMessage()    {}
func (*FpSmallGameItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_014de31d7ac8c57c, []int{24}
}

func (m *FpSmallGameItem) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FpSmallGameItem.Unmarshal(m, b)
}
func (m *FpSmallGameItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FpSmallGameItem.Marshal(b, m, deterministic)
}
func (m *FpSmallGameItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FpSmallGameItem.Merge(m, src)
}
func (m *FpSmallGameItem) XXX_Size() int {
	return xxx_messageInfo_FpSmallGameItem.Size(m)
}
func (m *FpSmallGameItem) XXX_DiscardUnknown() {
	xxx_messageInfo_FpSmallGameItem.DiscardUnknown(m)
}

var xxx_messageInfo_FpSmallGameItem proto.InternalMessageInfo

func (m *FpSmallGameItem) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *FpSmallGameItem) GetColor() int32 {
	if m != nil {
		return m.Color
	}
	return 0
}

type FpSmallGameStatus struct {
	Items                []*FpSmallGameItem `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	RestOpenCount        int32              `protobuf:"varint,2,opt,name=restOpenCount,proto3" json:"restOpenCount,omitempty"`
	WinMoney             int64              `protobuf:"varint,3,opt,name=winMoney,proto3" json:"winMoney,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *FpSmallGameStatus) Reset()         { *m = FpSmallGameStatus{} }
func (m *FpSmallGameStatus) String() string { return proto.CompactTextString(m) }
func (*FpSmallGameStatus) ProtoMessage()    {}
func (*FpSmallGameStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_014de31d7ac8c57c, []int{25}
}

func (m *FpSmallGameStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FpSmallGameStatus.Unmarshal(m, b)
}
func (m *FpSmallGameStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FpSmallGameStatus.Marshal(b, m, deterministic)
}
func (m *FpSmallGameStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FpSmallGameStatus.Merge(m, src)
}
func (m *FpSmallGameStatus) XXX_Size() int {
	return xxx_messageInfo_FpSmallGameStatus.Size(m)
}
func (m *FpSmallGameStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_FpSmallGameStatus.DiscardUnknown(m)
}

var xxx_messageInfo_FpSmallGameStatus proto.InternalMessageInfo

func (m *FpSmallGameStatus) GetItems() []*FpSmallGameItem {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *FpSmallGameStatus) GetRestOpenCount() int32 {
	if m != nil {
		return m.RestOpenCount
	}
	return 0
}

func (m *FpSmallGameStatus) GetWinMoney() int64 {
	if m != nil {
		return m.WinMoney
	}
	return 0
}

//亡灵节小游戏
type DdSmallGameItem struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Odds                 int32    `protobuf:"varint,3,opt,name=odds,proto3" json:"odds,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DdSmallGameItem) Reset()         { *m = DdSmallGameItem{} }
func (m *DdSmallGameItem) String() string { return proto.CompactTextString(m) }
func (*DdSmallGameItem) ProtoMessage()    {}
func (*DdSmallGameItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_014de31d7ac8c57c, []int{26}
}

func (m *DdSmallGameItem) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DdSmallGameItem.Unmarshal(m, b)
}
func (m *DdSmallGameItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DdSmallGameItem.Marshal(b, m, deterministic)
}
func (m *DdSmallGameItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DdSmallGameItem.Merge(m, src)
}
func (m *DdSmallGameItem) XXX_Size() int {
	return xxx_messageInfo_DdSmallGameItem.Size(m)
}
func (m *DdSmallGameItem) XXX_DiscardUnknown() {
	xxx_messageInfo_DdSmallGameItem.DiscardUnknown(m)
}

var xxx_messageInfo_DdSmallGameItem proto.InternalMessageInfo

func (m *DdSmallGameItem) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *DdSmallGameItem) GetOdds() int32 {
	if m != nil {
		return m.Odds
	}
	return 0
}

type DdSmallGameStatus struct {
	Items                []*DdSmallGameItem `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	RestSpin             int32              `protobuf:"varint,2,opt,name=restSpin,proto3" json:"restSpin,omitempty"`
	WinMoney             int64              `protobuf:"varint,3,opt,name=winMoney,proto3" json:"winMoney,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *DdSmallGameStatus) Reset()         { *m = DdSmallGameStatus{} }
func (m *DdSmallGameStatus) String() string { return proto.CompactTextString(m) }
func (*DdSmallGameStatus) ProtoMessage()    {}
func (*DdSmallGameStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_014de31d7ac8c57c, []int{27}
}

func (m *DdSmallGameStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DdSmallGameStatus.Unmarshal(m, b)
}
func (m *DdSmallGameStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DdSmallGameStatus.Marshal(b, m, deterministic)
}
func (m *DdSmallGameStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DdSmallGameStatus.Merge(m, src)
}
func (m *DdSmallGameStatus) XXX_Size() int {
	return xxx_messageInfo_DdSmallGameStatus.Size(m)
}
func (m *DdSmallGameStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_DdSmallGameStatus.DiscardUnknown(m)
}

var xxx_messageInfo_DdSmallGameStatus proto.InternalMessageInfo

func (m *DdSmallGameStatus) GetItems() []*DdSmallGameItem {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *DdSmallGameStatus) GetRestSpin() int32 {
	if m != nil {
		return m.RestSpin
	}
	return 0
}

func (m *DdSmallGameStatus) GetWinMoney() int64 {
	if m != nil {
		return m.WinMoney
	}
	return 0
}

//金鸡报喜小游戏
type GcSmallGameItem struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	PotType              int32    `protobuf:"varint,2,opt,name=potType,proto3" json:"potType,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GcSmallGameItem) Reset()         { *m = GcSmallGameItem{} }
func (m *GcSmallGameItem) String() string { return proto.CompactTextString(m) }
func (*GcSmallGameItem) ProtoMessage()    {}
func (*GcSmallGameItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_014de31d7ac8c57c, []int{28}
}

func (m *GcSmallGameItem) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GcSmallGameItem.Unmarshal(m, b)
}
func (m *GcSmallGameItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GcSmallGameItem.Marshal(b, m, deterministic)
}
func (m *GcSmallGameItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GcSmallGameItem.Merge(m, src)
}
func (m *GcSmallGameItem) XXX_Size() int {
	return xxx_messageInfo_GcSmallGameItem.Size(m)
}
func (m *GcSmallGameItem) XXX_DiscardUnknown() {
	xxx_messageInfo_GcSmallGameItem.DiscardUnknown(m)
}

var xxx_messageInfo_GcSmallGameItem proto.InternalMessageInfo

func (m *GcSmallGameItem) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *GcSmallGameItem) GetPotType() int32 {
	if m != nil {
		return m.PotType
	}
	return 0
}

type GcSmallGameStatus struct {
	Items                []*GcSmallGameItem `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	WinMoney             int64              `protobuf:"varint,2,opt,name=winMoney,proto3" json:"winMoney,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *GcSmallGameStatus) Reset()         { *m = GcSmallGameStatus{} }
func (m *GcSmallGameStatus) String() string { return proto.CompactTextString(m) }
func (*GcSmallGameStatus) ProtoMessage()    {}
func (*GcSmallGameStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_014de31d7ac8c57c, []int{29}
}

func (m *GcSmallGameStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GcSmallGameStatus.Unmarshal(m, b)
}
func (m *GcSmallGameStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GcSmallGameStatus.Marshal(b, m, deterministic)
}
func (m *GcSmallGameStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GcSmallGameStatus.Merge(m, src)
}
func (m *GcSmallGameStatus) XXX_Size() int {
	return xxx_messageInfo_GcSmallGameStatus.Size(m)
}
func (m *GcSmallGameStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_GcSmallGameStatus.DiscardUnknown(m)
}

var xxx_messageInfo_GcSmallGameStatus proto.InternalMessageInfo

func (m *GcSmallGameStatus) GetItems() []*GcSmallGameItem {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *GcSmallGameStatus) GetWinMoney() int64 {
	if m != nil {
		return m.WinMoney
	}
	return 0
}

//公路之王
type RkIconsReq struct {
	BetMoney             int64    `protobuf:"varint,1,opt,name=betMoney,proto3" json:"betMoney,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RkIconsReq) Reset()         { *m = RkIconsReq{} }
func (m *RkIconsReq) String() string { return proto.CompactTextString(m) }
func (*RkIconsReq) ProtoMessage()    {}
func (*RkIconsReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_014de31d7ac8c57c, []int{30}
}

func (m *RkIconsReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RkIconsReq.Unmarshal(m, b)
}
func (m *RkIconsReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RkIconsReq.Marshal(b, m, deterministic)
}
func (m *RkIconsReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RkIconsReq.Merge(m, src)
}
func (m *RkIconsReq) XXX_Size() int {
	return xxx_messageInfo_RkIconsReq.Size(m)
}
func (m *RkIconsReq) XXX_DiscardUnknown() {
	xxx_messageInfo_RkIconsReq.DiscardUnknown(m)
}

var xxx_messageInfo_RkIconsReq proto.InternalMessageInfo

func (m *RkIconsReq) GetBetMoney() int64 {
	if m != nil {
		return m.BetMoney
	}
	return 0
}

type RkIconsRes struct {
	Icons                []int32  `protobuf:"varint,1,rep,packed,name=icons,proto3" json:"icons,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RkIconsRes) Reset()         { *m = RkIconsRes{} }
func (m *RkIconsRes) String() string { return proto.CompactTextString(m) }
func (*RkIconsRes) ProtoMessage()    {}
func (*RkIconsRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_014de31d7ac8c57c, []int{31}
}

func (m *RkIconsRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RkIconsRes.Unmarshal(m, b)
}
func (m *RkIconsRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RkIconsRes.Marshal(b, m, deterministic)
}
func (m *RkIconsRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RkIconsRes.Merge(m, src)
}
func (m *RkIconsRes) XXX_Size() int {
	return xxx_messageInfo_RkIconsRes.Size(m)
}
func (m *RkIconsRes) XXX_DiscardUnknown() {
	xxx_messageInfo_RkIconsRes.DiscardUnknown(m)
}

var xxx_messageInfo_RkIconsRes proto.InternalMessageInfo

func (m *RkIconsRes) GetIcons() []int32 {
	if m != nil {
		return m.Icons
	}
	return nil
}

// 资产信息 窗口化应用
type AssetsInfoReq struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AssetsInfoReq) Reset()         { *m = AssetsInfoReq{} }
func (m *AssetsInfoReq) String() string { return proto.CompactTextString(m) }
func (*AssetsInfoReq) ProtoMessage()    {}
func (*AssetsInfoReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_014de31d7ac8c57c, []int{32}
}

func (m *AssetsInfoReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AssetsInfoReq.Unmarshal(m, b)
}
func (m *AssetsInfoReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AssetsInfoReq.Marshal(b, m, deterministic)
}
func (m *AssetsInfoReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AssetsInfoReq.Merge(m, src)
}
func (m *AssetsInfoReq) XXX_Size() int {
	return xxx_messageInfo_AssetsInfoReq.Size(m)
}
func (m *AssetsInfoReq) XXX_DiscardUnknown() {
	xxx_messageInfo_AssetsInfoReq.DiscardUnknown(m)
}

var xxx_messageInfo_AssetsInfoReq proto.InternalMessageInfo

// 资产信息返回
type AssetsInfoRsp struct {
	Money                int64    `protobuf:"varint,1,opt,name=money,proto3" json:"money,omitempty"`
	Cheque               int64    `protobuf:"varint,2,opt,name=cheque,proto3" json:"cheque,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AssetsInfoRsp) Reset()         { *m = AssetsInfoRsp{} }
func (m *AssetsInfoRsp) String() string { return proto.CompactTextString(m) }
func (*AssetsInfoRsp) ProtoMessage()    {}
func (*AssetsInfoRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_014de31d7ac8c57c, []int{33}
}

func (m *AssetsInfoRsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AssetsInfoRsp.Unmarshal(m, b)
}
func (m *AssetsInfoRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AssetsInfoRsp.Marshal(b, m, deterministic)
}
func (m *AssetsInfoRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AssetsInfoRsp.Merge(m, src)
}
func (m *AssetsInfoRsp) XXX_Size() int {
	return xxx_messageInfo_AssetsInfoRsp.Size(m)
}
func (m *AssetsInfoRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_AssetsInfoRsp.DiscardUnknown(m)
}

var xxx_messageInfo_AssetsInfoRsp proto.InternalMessageInfo

func (m *AssetsInfoRsp) GetMoney() int64 {
	if m != nil {
		return m.Money
	}
	return 0
}

func (m *AssetsInfoRsp) GetCheque() int64 {
	if m != nil {
		return m.Cheque
	}
	return 0
}

// 小游戏中奖广播
type SmallGameAwardBroadCast struct {
	Uid                  int32    `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	SmType               int32    `protobuf:"varint,2,opt,name=smType,proto3" json:"smType,omitempty"`
	SmMoney              int64    `protobuf:"varint,3,opt,name=smMoney,proto3" json:"smMoney,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SmallGameAwardBroadCast) Reset()         { *m = SmallGameAwardBroadCast{} }
func (m *SmallGameAwardBroadCast) String() string { return proto.CompactTextString(m) }
func (*SmallGameAwardBroadCast) ProtoMessage()    {}
func (*SmallGameAwardBroadCast) Descriptor() ([]byte, []int) {
	return fileDescriptor_014de31d7ac8c57c, []int{34}
}

func (m *SmallGameAwardBroadCast) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SmallGameAwardBroadCast.Unmarshal(m, b)
}
func (m *SmallGameAwardBroadCast) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SmallGameAwardBroadCast.Marshal(b, m, deterministic)
}
func (m *SmallGameAwardBroadCast) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SmallGameAwardBroadCast.Merge(m, src)
}
func (m *SmallGameAwardBroadCast) XXX_Size() int {
	return xxx_messageInfo_SmallGameAwardBroadCast.Size(m)
}
func (m *SmallGameAwardBroadCast) XXX_DiscardUnknown() {
	xxx_messageInfo_SmallGameAwardBroadCast.DiscardUnknown(m)
}

var xxx_messageInfo_SmallGameAwardBroadCast proto.InternalMessageInfo

func (m *SmallGameAwardBroadCast) GetUid() int32 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *SmallGameAwardBroadCast) GetSmType() int32 {
	if m != nil {
		return m.SmType
	}
	return 0
}

func (m *SmallGameAwardBroadCast) GetSmMoney() int64 {
	if m != nil {
		return m.SmMoney
	}
	return 0
}

func init() {
	proto.RegisterEnum("command.Code", Code_name, Code_value)
	proto.RegisterEnum("command.SlotsMode_Mode", SlotsMode_Mode_name, SlotsMode_Mode_value)
	proto.RegisterType((*UserInfo)(nil), "command.UserInfo")
	proto.RegisterType((*SlotProp)(nil), "command.SlotProp")
	proto.RegisterType((*Crdnt)(nil), "command.Crdnt")
	proto.RegisterType((*Crdnts)(nil), "command.Crdnts")
	proto.RegisterType((*SlotData)(nil), "command.SlotData")
	proto.RegisterMapType((map[int64]*Crdnts)(nil), "command.SlotData.AliceFwPosEntry")
	proto.RegisterType((*SlotsMode)(nil), "command.SlotsMode")
	proto.RegisterType((*JackpotReq)(nil), "command.JackpotReq")
	proto.RegisterType((*JackpotRes)(nil), "command.JackpotRes")
	proto.RegisterType((*SpinReq)(nil), "command.SpinReq")
	proto.RegisterType((*SlotsLine)(nil), "command.SlotsLine")
	proto.RegisterType((*SlotsCol)(nil), "command.SlotsCol")
	proto.RegisterType((*SpinRes)(nil), "command.SpinRes")
	proto.RegisterType((*SmallGameReq)(nil), "command.SmallGameReq")
	proto.RegisterType((*SbSmallGameItem)(nil), "command.SbSmallGameItem")
	proto.RegisterType((*SbSmallGameStatus)(nil), "command.SbSmallGameStatus")
	proto.RegisterType((*SleepingBeautySmallGameReq)(nil), "command.SleepingBeautySmallGameReq")
	proto.RegisterType((*WgSmallGameItem)(nil), "command.WgSmallGameItem")
	proto.RegisterType((*WgSmallGameStatus)(nil), "command.WgSmallGameStatus")
	proto.RegisterType((*WgCrazyGameItem)(nil), "command.WgCrazyGameItem")
	proto.RegisterType((*WgCrazyGameStatus)(nil), "command.WgCrazyGameStatus")
	proto.RegisterType((*PhSmallGameItem)(nil), "command.PhSmallGameItem")
	proto.RegisterType((*PhSmallGameStatus)(nil), "command.PhSmallGameStatus")
	proto.RegisterType((*HlSmallGameItem)(nil), "command.HlSmallGameItem")
	proto.RegisterType((*HlSmallGameStatus)(nil), "command.HlSmallGameStatus")
	proto.RegisterType((*FpSmallGameItem)(nil), "command.FpSmallGameItem")
	proto.RegisterType((*FpSmallGameStatus)(nil), "command.FpSmallGameStatus")
	proto.RegisterType((*DdSmallGameItem)(nil), "command.DdSmallGameItem")
	proto.RegisterType((*DdSmallGameStatus)(nil), "command.DdSmallGameStatus")
	proto.RegisterType((*GcSmallGameItem)(nil), "command.GcSmallGameItem")
	proto.RegisterType((*GcSmallGameStatus)(nil), "command.GcSmallGameStatus")
	proto.RegisterType((*RkIconsReq)(nil), "command.RkIconsReq")
	proto.RegisterType((*RkIconsRes)(nil), "command.RkIconsRes")
	proto.RegisterType((*AssetsInfoReq)(nil), "command.assetsInfoReq")
	proto.RegisterType((*AssetsInfoRsp)(nil), "command.assetsInfoRsp")
	proto.RegisterType((*SmallGameAwardBroadCast)(nil), "command.SmallGameAwardBroadCast")
}

func init() { proto.RegisterFile("client.proto", fileDescriptor_014de31d7ac8c57c) }

var fileDescriptor_014de31d7ac8c57c = []byte{
	// 1663 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x58, 0x5b, 0x6f, 0xdb, 0x46,
	0x16, 0x0e, 0x75, 0xb1, 0xec, 0x63, 0x59, 0x17, 0x26, 0x9b, 0x70, 0xbd, 0xd9, 0x40, 0xe1, 0x66,
	0x17, 0x86, 0x37, 0x6b, 0x60, 0x1d, 0x04, 0xe9, 0x05, 0x05, 0x22, 0xcb, 0x97, 0x28, 0xb1, 0xe4,
	0x80, 0x8a, 0x6b, 0xa4, 0x40, 0x61, 0xd0, 0xe4, 0xd8, 0x61, 0x4d, 0x71, 0x68, 0x72, 0x14, 0x5b,
	0xe9, 0x63, 0xd1, 0xe7, 0xfe, 0x80, 0x3e, 0xf4, 0xa9, 0xef, 0xfd, 0x0b, 0xfd, 0x17, 0xfd, 0x09,
	0xfd, 0x19, 0xc5, 0x99, 0x19, 0x92, 0x43, 0x2a, 0xbe, 0x20, 0x2f, 0xc6, 0x7c, 0x87, 0x67, 0xce,
	0x9c, 0xf3, 0x9d, 0xcb, 0x8c, 0x0c, 0x75, 0xc7, 0xf7, 0x48, 0xc0, 0xd6, 0xc2, 0x88, 0x32, 0xaa,
	0xd7, 0x1c, 0x3a, 0x1e, 0xdb, 0x81, 0x6b, 0xae, 0xc3, 0xfc, 0x7e, 0x4c, 0xa2, 0x7e, 0x70, 0x4c,
	0xf5, 0x16, 0x94, 0x27, 0x9e, 0x6b, 0x68, 0x1d, 0x6d, 0xa5, 0x6a, 0xe1, 0x52, 0xbf, 0x03, 0xd5,
	0x31, 0x0d, 0xc8, 0xd4, 0x28, 0x75, 0xb4, 0x95, 0xb2, 0x25, 0x80, 0x79, 0x0c, 0xf3, 0x23, 0x9f,
	0xb2, 0xd7, 0x11, 0x0d, 0x51, 0xa3, 0x47, 0x27, 0x01, 0x93, 0xbb, 0x04, 0x40, 0xe9, 0xd7, 0xb6,
	0x3f, 0x21, 0x7c, 0x5f, 0xd5, 0x12, 0x40, 0x37, 0xa0, 0xd6, 0x77, 0x68, 0xb0, 0x1f, 0xf9, 0x46,
	0xb9, 0xa3, 0xad, 0x2c, 0x58, 0x09, 0x44, 0xfd, 0x5d, 0xf2, 0x9e, 0xf8, 0x46, 0x85, 0xcb, 0x05,
	0x30, 0xff, 0x05, 0xd5, 0x5e, 0xe4, 0x06, 0x4c, 0xaf, 0x83, 0x76, 0x21, 0x0f, 0xd0, 0x2e, 0x10,
	0x4d, 0xa5, 0x61, 0x6d, 0x6a, 0xae, 0xc2, 0x1c, 0x57, 0x8a, 0xf5, 0x0e, 0x94, 0x9d, 0x08, 0xdd,
	0x2f, 0xaf, 0x2c, 0xae, 0x37, 0xd6, 0x64, 0x84, 0x6b, 0xfc, 0xab, 0x85, 0x9f, 0xcc, 0x3f, 0x2b,
	0xc2, 0xf3, 0x4d, 0x9b, 0xd9, 0x18, 0x2d, 0xcb, 0xa2, 0x65, 0x9e, 0xab, 0x2f, 0xc3, 0x7c, 0x44,
	0x62, 0xb6, 0x1d, 0x91, 0xc4, 0xf1, 0x14, 0xa3, 0xef, 0x47, 0x84, 0xed, 0x7a, 0x01, 0xe1, 0xbe,
	0x57, 0xad, 0x04, 0xea, 0x26, 0xd4, 0x7d, 0x3b, 0x66, 0x1b, 0x84, 0x0d, 0x38, 0x55, 0x15, 0x4e,
	0x55, 0x4e, 0x86, 0x96, 0x11, 0x73, 0xcb, 0x55, 0x61, 0x39, 0xc1, 0xfa, 0x7f, 0xa0, 0x81, 0xeb,
	0xee, 0xb9, 0x1d, 0xb9, 0xc2, 0xc2, 0x1c, 0xb7, 0x50, 0x90, 0xea, 0x1d, 0x58, 0x3c, 0xf7, 0x82,
	0xc1, 0xc4, 0x67, 0x5e, 0xe8, 0x13, 0xa3, 0xc6, 0xcd, 0xa8, 0x22, 0xfd, 0xff, 0x00, 0x3e, 0x65,
	0x8c, 0x44, 0xd3, 0x81, 0x1d, 0x1a, 0xf3, 0x9c, 0x87, 0x76, 0xca, 0x03, 0x06, 0x1e, 0xf7, 0xa8,
	0x6f, 0x29, 0x4a, 0xfa, 0x53, 0xa8, 0x1f, 0x47, 0x84, 0xec, 0xd8, 0x63, 0xd2, 0xb3, 0x23, 0xd7,
	0x58, 0xe8, 0x68, 0x33, 0x9b, 0x30, 0xcf, 0x56, 0x4e, 0x0d, 0x4f, 0x3a, 0xf2, 0x4e, 0x0e, 0xbc,
	0x80, 0x6f, 0x82, 0xcb, 0x36, 0x29, 0x4a, 0x98, 0x62, 0x9f, 0xa7, 0x78, 0x51, 0x94, 0x04, 0x07,
	0x48, 0xab, 0xed, 0x7b, 0x0e, 0xd9, 0x3e, 0x37, 0xea, 0x9d, 0x32, 0xd2, 0x2a, 0xa1, 0xde, 0x05,
	0x90, 0xcb, 0xd7, 0x34, 0x36, 0x96, 0x78, 0x30, 0x0f, 0x73, 0x47, 0x60, 0x16, 0xd7, 0xba, 0xa9,
	0xce, 0x56, 0xc0, 0xa2, 0xa9, 0xa5, 0x6c, 0xd2, 0x57, 0xa1, 0x15, 0x9d, 0xbe, 0xa4, 0xce, 0x69,
	0x48, 0x79, 0xaa, 0x36, 0x08, 0x33, 0x1a, 0x9c, 0xdb, 0x19, 0xf9, 0xf2, 0x10, 0x9a, 0x05, 0x53,
	0x58, 0x20, 0xa7, 0x64, 0xca, 0x0b, 0xa4, 0x6c, 0xe1, 0x52, 0xff, 0x37, 0x54, 0xdf, 0xa7, 0x65,
	0xbd, 0xb8, 0xde, 0xcc, 0xd7, 0x58, 0x6c, 0x89, 0xaf, 0x5f, 0x94, 0x3e, 0xd3, 0xcc, 0x0f, 0xb0,
	0xc0, 0x09, 0x1f, 0x50, 0x97, 0xe8, 0xff, 0x85, 0xca, 0x98, 0xba, 0x84, 0x9b, 0x6a, 0xac, 0xdf,
	0xcb, 0xa7, 0x04, 0x35, 0xd6, 0xf0, 0x8f, 0xc5, 0x95, 0xcc, 0xe7, 0x50, 0xe1, 0x9b, 0xea, 0x30,
	0xbf, 0x3f, 0x7c, 0x35, 0xdc, 0x3b, 0x18, 0x3e, 0x69, 0xdd, 0xd2, 0x01, 0xe6, 0x86, 0x7b, 0xd6,
	0xa0, 0xbb, 0xdb, 0xd2, 0xf4, 0x06, 0xc0, 0x68, 0xd0, 0xdd, 0xdd, 0x3d, 0xdc, 0xe9, 0x0e, 0xb6,
	0x5a, 0x25, 0xc4, 0x3d, 0xab, 0xfb, 0xcd, 0x5b, 0x81, 0xcb, 0xe6, 0x03, 0x80, 0x97, 0x36, 0x8f,
	0xce, 0x22, 0x67, 0xb3, 0x75, 0x6e, 0xae, 0x28, 0xdf, 0x63, 0xac, 0xcd, 0x90, 0xca, 0xda, 0xc5,
	0xde, 0x29, 0x5b, 0x29, 0x36, 0x1d, 0xa8, 0x8d, 0x42, 0x2f, 0x40, 0x33, 0x4a, 0x03, 0x68, 0xb3,
	0x0d, 0x20, 0x58, 0x1c, 0x28, 0xb3, 0x22, 0x27, 0xcb, 0x1d, 0x52, 0x2e, 0x1c, 0xf2, 0xbb, 0x26,
	0xb9, 0xe2, 0xd6, 0xee, 0xc2, 0x1c, 0xee, 0xec, 0x6f, 0xca, 0x63, 0x24, 0xd2, 0xef, 0xc3, 0x02,
	0xae, 0xd4, 0x23, 0x32, 0x01, 0xee, 0x0a, 0x3d, 0x67, 0x38, 0x19, 0xcb, 0xee, 0x94, 0xa8, 0xd8,
	0x34, 0x95, 0xd9, 0xa6, 0xd1, 0xa1, 0x42, 0x5d, 0x37, 0x96, 0x6d, 0xc9, 0xd7, 0xbc, 0x5d, 0xbd,
	0x80, 0xbc, 0x99, 0x86, 0x84, 0x37, 0x23, 0xb6, 0xab, 0xc4, 0x58, 0xc7, 0xa1, 0xe7, 0xf4, 0x5d,
	0xd9, 0x80, 0x02, 0x98, 0x1d, 0x31, 0x58, 0xb0, 0xbf, 0x50, 0xc3, 0x73, 0x68, 0x10, 0x73, 0x36,
	0xab, 0x96, 0x00, 0xe6, 0x6f, 0xb5, 0x84, 0xcb, 0xb8, 0xd0, 0xa8, 0xda, 0x4d, 0x1a, 0xf5, 0x31,
	0xd4, 0x78, 0xb4, 0x76, 0x68, 0x94, 0xb8, 0xbe, 0x9e, 0xd7, 0x47, 0xee, 0xac, 0x44, 0x05, 0xc9,
	0x62, 0x94, 0xd9, 0xfe, 0x1e, 0x46, 0x26, 0x18, 0xc9, 0x04, 0x18, 0x1e, 0x32, 0xa0, 0x4c, 0xab,
	0x14, 0xe3, 0xce, 0x49, 0x4c, 0x22, 0xf1, 0xb1, 0x2a, 0x68, 0x4e, 0x05, 0x48, 0xb3, 0x17, 0xf3,
	0x29, 0x26, 0x68, 0x91, 0x08, 0x77, 0xe1, 0x7c, 0x78, 0xe3, 0x8d, 0x49, 0x2c, 0x89, 0xc9, 0x04,
	0xb9, 0xb9, 0x3a, 0x5f, 0x98, 0xab, 0x1d, 0x58, 0xfc, 0x4e, 0xd4, 0x22, 0x67, 0x1b, 0x44, 0x82,
	0x14, 0x11, 0x96, 0x97, 0x84, 0xc2, 0xa9, 0x45, 0x51, 0x5e, 0xaa, 0x0c, 0x67, 0x28, 0x0f, 0x6f,
	0x3b, 0x75, 0xa2, 0xce, 0x0d, 0x15, 0xa4, 0x78, 0x5a, 0x3f, 0x1e, 0x8d, 0x6d, 0xdf, 0xc7, 0x51,
	0x66, 0x2c, 0x89, 0xd3, 0x14, 0x51, 0xb1, 0x60, 0x1a, 0xb3, 0x05, 0x63, 0x40, 0x2d, 0xa2, 0x93,
	0xc0, 0xed, 0xbb, 0x46, 0x53, 0x34, 0x82, 0x84, 0xb8, 0x57, 0x0c, 0x3c, 0xe1, 0x68, 0x8b, 0x3b,
	0xaa, 0x8a, 0xb2, 0x21, 0xd8, 0x56, 0x87, 0x20, 0x96, 0x1b, 0x2e, 0xb6, 0x2e, 0x42, 0x43, 0x17,
	0xf9, 0x48, 0x30, 0x46, 0x1f, 0x27, 0xce, 0x1d, 0x78, 0x81, 0x71, 0x5b, 0x44, 0xaf, 0xca, 0xf4,
	0x07, 0x00, 0x47, 0x34, 0x98, 0xc4, 0xe2, 0x22, 0xbe, 0xc3, 0x4d, 0x2b, 0x12, 0x6e, 0xc3, 0xb1,
	0xb1, 0x94, 0x84, 0xc6, 0xdf, 0xb8, 0x46, 0x4e, 0x86, 0x19, 0xf4, 0xe2, 0x1e, 0x0d, 0x58, 0x44,
	0x7d, 0xe3, 0xae, 0xc8, 0x60, 0x2a, 0xd0, 0x1f, 0xc1, 0x92, 0x17, 0xef, 0x85, 0x24, 0x48, 0x34,
	0xee, 0x71, 0x8d, 0xbc, 0x10, 0xe3, 0x3f, 0x26, 0x36, 0x9b, 0x44, 0xa2, 0x73, 0x0c, 0x7e, 0x97,
	0xab, 0x22, 0xfd, 0x7f, 0x50, 0x8b, 0x4e, 0xfb, 0xbc, 0x39, 0xfe, 0xce, 0x47, 0xe8, 0xed, 0xb4,
	0x8a, 0x2d, 0x21, 0xb7, 0x48, 0x6c, 0x25, 0x3a, 0xfa, 0x63, 0x68, 0xf3, 0x2a, 0xc2, 0x24, 0xa6,
	0xb4, 0x2e, 0x73, 0x06, 0x66, 0x3f, 0x20, 0xb9, 0x2e, 0x39, 0x9a, 0x9c, 0x18, 0xff, 0x10, 0x8f,
	0x08, 0x0e, 0xf4, 0x87, 0x50, 0x71, 0x70, 0xf6, 0xde, 0xe7, 0xb3, 0x77, 0x29, 0x1b, 0xd9, 0x7c,
	0xe2, 0xe2, 0x27, 0xac, 0x6a, 0xe7, 0x1d, 0x39, 0x9b, 0x10, 0xe3, 0x9f, 0xdc, 0xb6, 0x44, 0xe6,
	0x2a, 0xd4, 0xd3, 0xc2, 0xc0, 0x11, 0xc8, 0x87, 0x58, 0xec, 0x31, 0x8f, 0x06, 0x72, 0x38, 0xa5,
	0xd8, 0xfc, 0x49, 0x83, 0xe6, 0xe8, 0x28, 0x55, 0xef, 0x33, 0x32, 0xc6, 0xc9, 0x1b, 0xd1, 0xf3,
	0x64, 0xf2, 0x46, 0xf4, 0x1c, 0x25, 0x0e, 0xf5, 0xe5, 0xe3, 0x02, 0x97, 0x78, 0x76, 0xcc, 0x6c,
	0x36, 0x49, 0xda, 0x54, 0x22, 0xac, 0x32, 0x87, 0x06, 0x8c, 0x04, 0x4c, 0x0e, 0xad, 0x04, 0x66,
	0x6f, 0xb2, 0xaa, 0xf2, 0x26, 0x43, 0xcb, 0xd4, 0x75, 0x65, 0x5b, 0xe2, 0xd2, 0xfc, 0x45, 0x83,
	0xb6, 0xe2, 0xd1, 0x48, 0xd8, 0x5d, 0x83, 0xaa, 0xc7, 0xc8, 0x38, 0x96, 0x53, 0xc7, 0xc8, 0xa6,
	0x48, 0xde, 0x79, 0x4b, 0xa8, 0xe5, 0x66, 0x45, 0xa9, 0x30, 0x2b, 0xf2, 0x75, 0x57, 0x9e, 0xa9,
	0xbb, 0x07, 0x00, 0xf1, 0x3b, 0x7a, 0x4e, 0x5c, 0x7e, 0x6b, 0x88, 0x30, 0x14, 0x89, 0xf9, 0x1c,
	0x96, 0x47, 0x3e, 0x21, 0xa1, 0x17, 0x9c, 0x6c, 0x10, 0x7b, 0xc2, 0xa6, 0x39, 0xb6, 0x6f, 0xc0,
	0x9e, 0xf9, 0x0a, 0x9a, 0x07, 0x27, 0x79, 0xd2, 0x1b, 0x50, 0x4a, 0x6f, 0xbb, 0x92, 0xe7, 0x26,
	0xc4, 0x94, 0x52, 0x62, 0x2e, 0xa3, 0xdc, 0xfc, 0x55, 0x83, 0xb6, 0x62, 0xed, 0x3a, 0xc2, 0x0a,
	0x07, 0x27, 0x84, 0x3d, 0x82, 0xa5, 0xb1, 0x7d, 0xd1, 0xf3, 0x3d, 0xe7, 0x54, 0xf0, 0x22, 0x4e,
	0xce, 0x0b, 0x91, 0x9a, 0xb1, 0x7d, 0x71, 0x70, 0x92, 0xa3, 0x2e, 0x93, 0x5c, 0x35, 0xa2, 0xcd,
	0xcf, 0x31, 0xe8, 0x5e, 0x64, 0x7f, 0x98, 0xaa, 0x95, 0x86, 0x41, 0x6a, 0x59, 0x90, 0x77, 0xa0,
	0xea, 0x28, 0xc7, 0x0b, 0x60, 0xfe, 0xc1, 0x43, 0x4c, 0xf7, 0xca, 0x10, 0x3f, 0xe1, 0x3a, 0x5a,
	0x87, 0x1a, 0xde, 0x94, 0xd9, 0x75, 0xa4, 0xf2, 0x92, 0xf3, 0xcd, 0x4a, 0x14, 0x91, 0x19, 0x1c,
	0xfb, 0x78, 0x09, 0xaa, 0x61, 0xe7, 0x85, 0x57, 0x5e, 0x4e, 0xcb, 0x30, 0x7f, 0x94, 0xbc, 0x32,
	0x44, 0xf5, 0xa7, 0xd8, 0x7c, 0x06, 0xcd, 0xd7, 0xef, 0xae, 0x2e, 0x05, 0xce, 0x89, 0x4f, 0xa3,
	0x8c, 0x13, 0x9f, 0x46, 0xe6, 0x0f, 0x1a, 0xb4, 0x95, 0x9d, 0xd7, 0xa5, 0xbd, 0x70, 0xc8, 0x4d,
	0xfa, 0xa4, 0x78, 0x83, 0x95, 0x67, 0x6f, 0x30, 0x73, 0x04, 0xcd, 0x17, 0x7e, 0xde, 0x7d, 0xf9,
	0x8e, 0xe8, 0x26, 0x3f, 0xad, 0x38, 0x48, 0xa4, 0x1b, 0x49, 0x10, 0x1c, 0x24, 0xd2, 0x9e, 0xe4,
	0x54, 0x00, 0xf3, 0x67, 0x0d, 0xda, 0x8a, 0x55, 0x19, 0xda, 0x47, 0xdf, 0x27, 0x59, 0xc0, 0xc5,
	0x7c, 0x16, 0xdc, 0x52, 0xea, 0x1c, 0x13, 0x27, 0xe6, 0x7f, 0x21, 0x9b, 0xa9, 0xf0, 0xca, 0x3a,
	0x7e, 0x06, 0xcd, 0xed, 0xf0, 0x53, 0x32, 0xf6, 0xa3, 0x06, 0x6d, 0x65, 0xe7, 0x75, 0x19, 0x2b,
	0x1c, 0x72, 0x69, 0x00, 0xa5, 0xeb, 0x02, 0x28, 0x17, 0x02, 0x78, 0x0a, 0xcd, 0x4d, 0xf7, 0xea,
	0x00, 0x92, 0xd7, 0x65, 0x39, 0x7b, 0x5d, 0x9a, 0xdf, 0x43, 0x5b, 0xd9, 0x76, 0x9d, 0xf7, 0x85,
	0x13, 0x94, 0x7a, 0x4b, 0xfa, 0x46, 0xfd, 0xad, 0x8a, 0xf8, 0x4a, 0x9f, 0xbf, 0x84, 0xe6, 0x8e,
	0x73, 0xb5, 0xcf, 0x06, 0xd4, 0x92, 0xe7, 0x98, 0xb0, 0x9c, 0x40, 0xf3, 0x10, 0xda, 0xca, 0xe6,
	0xeb, 0x3c, 0x2f, 0x9c, 0x73, 0x83, 0x4e, 0xc1, 0x5f, 0x26, 0xe9, 0x3b, 0xe0, 0x2c, 0xd7, 0xee,
	0x5a, 0xa1, 0xdd, 0x4d, 0x45, 0xf3, 0x92, 0x92, 0x36, 0x9b, 0xb0, 0x64, 0xc7, 0x31, 0x61, 0x71,
	0x3f, 0x38, 0xa6, 0x16, 0x39, 0x33, 0xbf, 0xca, 0x09, 0xe2, 0x30, 0xbb, 0x4b, 0x35, 0xf5, 0x2e,
	0xcd, 0xde, 0x03, 0xa5, 0xdc, 0x7b, 0xe0, 0x5b, 0xb8, 0x97, 0x46, 0xc4, 0x7f, 0x98, 0x6f, 0x44,
	0xd4, 0x76, 0x7b, 0x76, 0xcc, 0x3e, 0xf2, 0xaf, 0x13, 0xbc, 0x65, 0xc6, 0x0a, 0x89, 0x12, 0x21,
	0xbb, 0xf1, 0x58, 0xcd, 0x4d, 0x02, 0x57, 0x7b, 0x50, 0xc1, 0x47, 0x89, 0xbe, 0x08, 0xb5, 0xd1,
	0x7e, 0xaf, 0xb7, 0x35, 0x1a, 0xb5, 0x6e, 0xe9, 0x3a, 0x34, 0xb6, 0xbb, 0xfd, 0xdd, 0xad, 0xcd,
	0x43, 0xf9, 0x63, 0xb0, 0xa5, 0xe9, 0xcb, 0x70, 0x57, 0xca, 0x86, 0x7b, 0x87, 0x5b, 0xc3, 0xbd,
	0xfd, 0x9d, 0x17, 0x87, 0x83, 0xbd, 0xe1, 0xd6, 0xdb, 0x56, 0xe9, 0x68, 0x8e, 0xff, 0x7f, 0xe7,
	0xc9, 0x5f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x9d, 0x09, 0xb4, 0x8d, 0xef, 0x11, 0x00, 0x00,
}
